import z from 'zod';
import { metadata } from '../interfaces/Metadata';

export const discordQuery = z.object({
  _id: z.string(),
  discordId: z.string(),
  organizationId: z.string(),
  messageId: z.string(),
  helpful: z.boolean().optional(),
  queryId: z.string(),
  meta: metadata,
});

export type DiscordQuery = z.infer<typeof discordQuery>;

export const createDiscordQueryParams = z.object({
  discordId: z.string(),
  organizationId: z.string(),
  messageId: z.string(),
  helpful: z.boolean(),
  meta: metadata,
  queryId: z.string(),
});

export const getDiscordQueryParams = z.object({
  id: z.string(),
});

export const getDiscordQueriesByServerIdParams = z.object({
  serverId: z.string(),
});

export type CreateDiscordQueryParams = z.infer<typeof createDiscordQueryParams>;
export type GetDiscordQueryParams = z.infer<typeof getDiscordQueryParams>;
export type GetDiscordQueriesByServerIdParams = z.infer<typeof getDiscordQueriesByServerIdParams>;

export interface DiscordQueryService {
  create(createDiscordQueryParams: CreateDiscordQueryParams): Promise<DiscordQuery>;
}
