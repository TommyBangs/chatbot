"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.superListBotsResponse = exports.superListBotsRequest = exports.superListBotsParams = exports.listBotsResponse = exports.listBotsRequest = exports.listBotsParams = exports.getBotResponse = exports.getBotRequest = exports.getBotParams = exports.archiveBotResponse = exports.archiveBotRequest = exports.archiveBotParams = exports.editBotResponse = exports.editBotRequest = exports.editBotParams = exports.createBotResponse = exports.createBotRequest = exports.createBotParams = exports.botFiles = exports.bot = exports.promptConfiguration = exports.trackingConfiguration = exports.embedConfiguration = exports.zEmbedPosition = exports.zEmbedType = exports.zEmbedTheme = void 0;
const zod_1 = __importDefault(require("zod"));
const common_1 = require("../interfaces/common");
const Metadata_1 = require("../interfaces/Metadata");
const FileService_1 = require("./FileService");
const SourceService_1 = require("./SourceService");
const SyncService_1 = require("./SyncService");
const SubscriptionService_1 = require("./SubscriptionService");
const GPTModels_1 = require("../enums/GPTModels");
exports.zEmbedTheme = zod_1.default.enum(['dark', 'light']);
exports.zEmbedType = zod_1.default.enum(['attribute', 'launcher']);
exports.zEmbedPosition = zod_1.default.enum(['bottom-right', 'bottom-left']);
exports.embedConfiguration = zod_1.default.object({
    enabled: zod_1.default.boolean().optional(),
    theme: exports.zEmbedTheme.optional(),
    type: exports.zEmbedType.optional(),
    position: exports.zEmbedPosition.optional(),
    background: zod_1.default.string().optional(),
    color: zod_1.default.string().optional(),
});
exports.trackingConfiguration = zod_1.default.object({
    utms: zod_1.default.array(zod_1.default.string()),
});
exports.promptConfiguration = zod_1.default.object({
    topic: zod_1.default.string(),
    context: zod_1.default.string(),
});
exports.bot = zod_1.default.object({
    _id: zod_1.default.string(),
    organizationId: zod_1.default.string(),
    sourceIds: zod_1.default.array(zod_1.default.string()),
    title: zod_1.default.string(),
    description: zod_1.default.string(),
    imageFileId: zod_1.default.string(),
    brandColor: zod_1.default.string(),
    website: zod_1.default.string(),
    faqs: zod_1.default.array(zod_1.default.string()),
    model: GPTModels_1.zGPTModels,
    archived: zod_1.default.boolean(),
    embed: exports.embedConfiguration,
    tracking: exports.trackingConfiguration,
    prompt: exports.promptConfiguration,
    meta: Metadata_1.metadata,
});
exports.botFiles = zod_1.default.object({
    imageFile: FileService_1.file.nullable(),
});
/** ******************************************************************************
*  Create Bot
******************************************************************************* */
exports.createBotParams = zod_1.default.object({
    title: zod_1.default.string().min(4).max(64),
    sourceIds: zod_1.default.array(zod_1.default.string()),
    description: zod_1.default.string(),
    imageFileId: zod_1.default.string(),
    brandColor: zod_1.default.string(),
    website: zod_1.default.string(),
    faqs: zod_1.default.array(zod_1.default.string()),
    tracking: exports.trackingConfiguration,
    prompt: exports.promptConfiguration,
    addSource: SourceService_1.addSourceParams,
    model: GPTModels_1.zGPTModels,
});
exports.createBotRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.createBotParams,
}));
exports.createBotResponse = common_1.serviceResponse.merge(zod_1.default.object({
    bot: exports.bot.optional(),
    sources: zod_1.default.array(SourceService_1.source).nullable().optional(),
    syncs: zod_1.default.array(SyncService_1.sync).nullable().optional(),
    subscription: SubscriptionService_1.subscription.nullable().optional(),
}));
/** ******************************************************************************
*  Edit Bot
******************************************************************************* */
exports.editBotParams = zod_1.default.object({
    _id: zod_1.default.string(),
    title: zod_1.default.string().min(4).max(64),
    sourceIds: zod_1.default.array(zod_1.default.string()),
    description: zod_1.default.string(),
    imageFileId: zod_1.default.string(),
    brandColor: zod_1.default.string(),
    website: zod_1.default.string(),
    faqs: zod_1.default.array(zod_1.default.string()),
    model: GPTModels_1.zGPTModels,
    embed: exports.embedConfiguration.partial(),
    tracking: exports.trackingConfiguration,
    prompt: exports.promptConfiguration,
});
exports.editBotRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.editBotParams.partial(),
}));
exports.editBotResponse = common_1.serviceResponse.merge(zod_1.default.object({
    bot: exports.bot.optional(),
}));
/** ******************************************************************************
*  Archive Bot
******************************************************************************* */
exports.archiveBotParams = zod_1.default.object({
    _id: zod_1.default.string(),
    archived: zod_1.default.boolean(),
});
exports.archiveBotRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.archiveBotParams,
}));
exports.archiveBotResponse = common_1.serviceResponse.merge(zod_1.default.object({
    bot: exports.bot.optional(),
}));
/** ******************************************************************************
*  Get Bot
******************************************************************************* */
exports.getBotParams = zod_1.default.object({
    botId: zod_1.default.string(),
});
exports.getBotRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.getBotParams,
}));
exports.getBotResponse = common_1.serviceResponse.merge(zod_1.default.object({
    bot: exports.bot.nullable().optional(),
}));
/** ******************************************************************************
*  List Bots
******************************************************************************* */
exports.listBotsParams = zod_1.default.object({
    archived: zod_1.default.boolean().optional(),
});
exports.listBotsRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.listBotsParams,
}));
exports.listBotsResponse = common_1.serviceResponse.merge(zod_1.default.object({
    bots: zod_1.default.array(exports.bot).optional(),
}));
/** ******************************************************************************
*  Super List Bots
******************************************************************************* */
exports.superListBotsParams = zod_1.default.object({});
exports.superListBotsRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.superListBotsParams,
}));
exports.superListBotsResponse = common_1.serviceResponse.merge(zod_1.default.object({
    bots: zod_1.default.array(exports.bot).optional(),
}));
//# sourceMappingURL=BotService.js.map