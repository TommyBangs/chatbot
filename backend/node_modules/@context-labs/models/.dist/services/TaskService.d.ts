import z from 'zod';
export declare enum TaskTypes {
    ImportSource = "Import Source",
    StartImportDocument = "Start Import Document",
    ImportDocumentTranscriptFromYouTube = "Import Document Transcript From YouTube",
    CreateDocumentSnippets = "Create Document Snippets",
    ImportDocumentViewsFromYouTube = "Import Document Views From YouTube",
    ImportDocumentAudio = "Import Document Audio",
    ImportDocumentWebPage = "Import Document Web Page",
    ImportUnstructuredDocument = "Import Unstructured Document",
    StartImportDocumentTranscript = "Start Import Document Transcript",
    FinishImportDocumentTranscript = "Finish Import Document Transcript",
    FinishImportDocument = "Finish Import Document"
}
export interface TaskService {
    createImportSource(request: CreateImportSourceTaskRequest): Promise<CreateImportSourceTaskResponse>;
    createImportDocument(request: CreateImportDocumentTaskRequest): Promise<CreateImportDocumentTaskResponse>;
    createUpdateDocument(request: CreateUpdateDocumentTaskRequest): Promise<CreateImportDocumentTaskResponse>;
}
/** ******************************************************************************
*  Create Import Source
******************************************************************************* */
export declare const createImportSourceTaskParams: z.ZodObject<{
    taskId: z.ZodOptional<z.ZodString>;
    syncId: z.ZodOptional<z.ZodString>;
    sourceId: z.ZodOptional<z.ZodString>;
    runAt: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    taskId?: string | undefined;
    syncId?: string | undefined;
    sourceId?: string | undefined;
    runAt?: number | null | undefined;
}, {
    taskId?: string | undefined;
    syncId?: string | undefined;
    sourceId?: string | undefined;
    runAt?: number | null | undefined;
}>;
export declare const createImportSourceTaskRequest: z.ZodObject<{
    params: z.ZodObject<{
        taskId: z.ZodOptional<z.ZodString>;
        syncId: z.ZodOptional<z.ZodString>;
        sourceId: z.ZodOptional<z.ZodString>;
        runAt: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        taskId?: string | undefined;
        syncId?: string | undefined;
        sourceId?: string | undefined;
        runAt?: number | null | undefined;
    }, {
        taskId?: string | undefined;
        syncId?: string | undefined;
        sourceId?: string | undefined;
        runAt?: number | null | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        taskId?: string | undefined;
        syncId?: string | undefined;
        sourceId?: string | undefined;
        runAt?: number | null | undefined;
    };
}, {
    params: {
        taskId?: string | undefined;
        syncId?: string | undefined;
        sourceId?: string | undefined;
        runAt?: number | null | undefined;
    };
}>;
export declare const createImportSourceTaskResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    taskId: z.ZodOptional<z.ZodString>;
    success: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    taskId?: string | undefined;
    success?: boolean | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    taskId?: string | undefined;
    success?: boolean | undefined;
}>;
export type CreateImportSourceTaskParams = z.infer<typeof createImportSourceTaskParams>;
export type CreateImportSourceTaskRequest = z.infer<typeof createImportSourceTaskRequest>;
export type CreateImportSourceTaskResponse = z.infer<typeof createImportSourceTaskResponse>;
/** ******************************************************************************
*  Create Import Document
******************************************************************************* */
export declare const createImportDocumentTaskParams: z.ZodObject<{
    taskId: z.ZodOptional<z.ZodString>;
    documentId: z.ZodString;
    syncId: z.ZodString;
    useReplicate: z.ZodBoolean;
    runAt: z.ZodNullable<z.ZodOptional<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    syncId: string;
    documentId: string;
    useReplicate: boolean;
    taskId?: string | undefined;
    runAt?: number | null | undefined;
}, {
    syncId: string;
    documentId: string;
    useReplicate: boolean;
    taskId?: string | undefined;
    runAt?: number | null | undefined;
}>;
export declare const createImportDocumentTaskRequest: z.ZodObject<{
    params: z.ZodObject<{
        taskId: z.ZodOptional<z.ZodString>;
        documentId: z.ZodString;
        syncId: z.ZodString;
        useReplicate: z.ZodBoolean;
        runAt: z.ZodNullable<z.ZodOptional<z.ZodNumber>>;
    }, "strip", z.ZodTypeAny, {
        syncId: string;
        documentId: string;
        useReplicate: boolean;
        taskId?: string | undefined;
        runAt?: number | null | undefined;
    }, {
        syncId: string;
        documentId: string;
        useReplicate: boolean;
        taskId?: string | undefined;
        runAt?: number | null | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        syncId: string;
        documentId: string;
        useReplicate: boolean;
        taskId?: string | undefined;
        runAt?: number | null | undefined;
    };
}, {
    params: {
        syncId: string;
        documentId: string;
        useReplicate: boolean;
        taskId?: string | undefined;
        runAt?: number | null | undefined;
    };
}>;
export declare const createImportDocumentTaskResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    taskId: z.ZodOptional<z.ZodString>;
    success: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    taskId?: string | undefined;
    success?: boolean | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    taskId?: string | undefined;
    success?: boolean | undefined;
}>;
export type CreateImportDocumentTaskParams = z.infer<typeof createImportDocumentTaskParams>;
export type CreateImportDocumentTaskRequest = z.infer<typeof createImportDocumentTaskRequest>;
export type CreateImportDocumentTaskResponse = z.infer<typeof createImportDocumentTaskResponse>;
/** ******************************************************************************
*  Create Update Document
******************************************************************************* */
export declare const createUpdateDocumentTaskParams: z.ZodObject<{
    taskId: z.ZodString;
    documentId: z.ZodString;
    syncId: z.ZodString;
    runAt: z.ZodNullable<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    syncId: string;
    documentId: string;
    taskId: string;
    runAt: number | null;
}, {
    syncId: string;
    documentId: string;
    taskId: string;
    runAt: number | null;
}>;
export declare const createUpdateDocumentTaskRequest: z.ZodObject<{
    params: z.ZodObject<{
        taskId: z.ZodString;
        documentId: z.ZodString;
        syncId: z.ZodString;
        runAt: z.ZodNullable<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        syncId: string;
        documentId: string;
        taskId: string;
        runAt: number | null;
    }, {
        syncId: string;
        documentId: string;
        taskId: string;
        runAt: number | null;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        syncId: string;
        documentId: string;
        taskId: string;
        runAt: number | null;
    };
}, {
    params: {
        syncId: string;
        documentId: string;
        taskId: string;
        runAt: number | null;
    };
}>;
export declare const createUpdateDocumentTaskResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    taskId: z.ZodOptional<z.ZodString>;
    success: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    taskId?: string | undefined;
    success?: boolean | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    taskId?: string | undefined;
    success?: boolean | undefined;
}>;
export type CreateUpdateDocumentTaskParams = z.infer<typeof createUpdateDocumentTaskParams>;
export type CreateUpdateDocumentTaskRequest = z.infer<typeof createUpdateDocumentTaskRequest>;
export type CreateUpdateDocumentTaskResponse = z.infer<typeof createUpdateDocumentTaskResponse>;
