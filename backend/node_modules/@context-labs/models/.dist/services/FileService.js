"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.listFilesResponse = exports.listFilesRequest = exports.listFilesParams = exports.getFileResponse = exports.getFileByURLRequest = exports.getFileByURLParams = exports.getFileRequest = exports.getFileParams = exports.createFileFromYouTubeResponse = exports.createFileFromYouTubeRequest = exports.createFileFromYouTubeParams = exports.creatFromUrlResponse = exports.creatFromUrlRequest = exports.creatFromUrlParams = exports.createFileResponse = exports.createFileRequest = exports.createFileParams = exports.file = void 0;
const zod_1 = __importDefault(require("zod"));
const common_1 = require("../interfaces/common");
const Metadata_1 = require("../interfaces/Metadata");
exports.file = zod_1.default.object({
    _id: zod_1.default.string(),
    name: zod_1.default.string(),
    mimetype: zod_1.default.string(),
    encoding: zod_1.default.string(),
    sizeBytes: zod_1.default.number().optional(),
    durationSeconds: zod_1.default.number().optional(),
    url: zod_1.default.string(),
    meta: Metadata_1.metadata,
});
/** ******************************************************************************
*  Create File
******************************************************************************* */
exports.createFileParams = zod_1.default.object({
    name: zod_1.default.string(),
    mimetype: zod_1.default.string(),
    encoding: zod_1.default.string(),
    sizeBytes: zod_1.default.number().optional(),
    durationSeconds: zod_1.default.number().optional(),
    buffer: zod_1.default.instanceof(Buffer).optional(),
});
exports.createFileRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.createFileParams,
}));
exports.createFileResponse = common_1.serviceResponse.merge(zod_1.default.object({
    file: exports.file.optional(),
    uploadUrl: zod_1.default.string().optional(),
}));
/** ******************************************************************************
*  Create From Url
******************************************************************************* */
exports.creatFromUrlParams = zod_1.default.object({
    url: zod_1.default.string(),
});
exports.creatFromUrlRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.creatFromUrlParams,
}));
exports.creatFromUrlResponse = common_1.serviceResponse.merge(zod_1.default.object({
    file: exports.file.optional(),
}));
/** ******************************************************************************
*  Create File From YouTube
******************************************************************************* */
exports.createFileFromYouTubeParams = zod_1.default.object({
    youtubeUrl: zod_1.default.string(),
});
exports.createFileFromYouTubeRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.createFileFromYouTubeParams,
}));
exports.createFileFromYouTubeResponse = common_1.serviceResponse.merge(zod_1.default.object({
    file: exports.file.optional(),
}));
/** ******************************************************************************
*  Get File
******************************************************************************* */
exports.getFileParams = zod_1.default.object({
    fileId: zod_1.default.string(),
});
exports.getFileRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.getFileParams,
}));
exports.getFileByURLParams = zod_1.default.object({
    url: zod_1.default.string(),
});
exports.getFileByURLRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.getFileByURLParams,
}));
exports.getFileResponse = common_1.serviceResponse.merge(zod_1.default.object({
    file: exports.file.optional().nullable(),
}));
/** ******************************************************************************
*  List Files
******************************************************************************* */
exports.listFilesParams = zod_1.default.object({
    fileIds: zod_1.default.array(zod_1.default.string()),
});
exports.listFilesRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.listFilesParams,
}));
exports.listFilesResponse = common_1.serviceResponse.merge(zod_1.default.object({
    files: zod_1.default.array(exports.file).optional(),
}));
//# sourceMappingURL=FileService.js.map