"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createStripeBillingPortalSessionResponse = exports.createStripeBillingPortalSessionRequest = exports.createStripeBillingPortalSessionParams = exports.createStripeSessionResponse = exports.createStripeSessionRequest = exports.createStripeSessionParams = exports.createStripeCustomerResponse = exports.createStripeCustomerRequest = exports.createStripeCustomerParams = exports.stripeUpgradeInfoResponse = exports.stripeUpgradeInfoRequest = exports.stripeUpgradeInfoParams = exports.listStripeProductsResponse = exports.listStripeProductsRequest = exports.listStripeProductsParams = void 0;
const zod_1 = __importDefault(require("zod"));
const common_1 = require("../interfaces/common");
const upgradeInfo = zod_1.default.object({
    total: zod_1.default.number(),
    items: zod_1.default.array(zod_1.default.object({
        name: zod_1.default.string(),
        quantity: zod_1.default.number(),
        amount: zod_1.default.number(),
    })),
});
/** ******************************************************************************
*  List Stripe Products
******************************************************************************* */
exports.listStripeProductsParams = zod_1.default.object({});
exports.listStripeProductsRequest = common_1.authedServiceRequest
    .merge(zod_1.default.object({
    params: exports.listStripeProductsParams.optional(),
}));
exports.listStripeProductsResponse = common_1.serviceResponse.merge(zod_1.default.object({
    products: zod_1.default.array(zod_1.default.any()).optional(),
}));
/** ******************************************************************************
*  Get Stripe Upgrade Info
******************************************************************************* */
exports.stripeUpgradeInfoParams = zod_1.default.object({
    productId: zod_1.default.string(),
    priceId: zod_1.default.string(),
});
exports.stripeUpgradeInfoRequest = common_1.authedServiceRequest
    .merge(zod_1.default.object({
    params: exports.stripeUpgradeInfoParams,
}));
exports.stripeUpgradeInfoResponse = common_1.serviceResponse.merge(zod_1.default.object({
    upgradeInfo: upgradeInfo.nullable().optional(),
}));
/** ******************************************************************************
*  Create Stripe Customer
******************************************************************************* */
exports.createStripeCustomerParams = zod_1.default.object({
    organizationId: zod_1.default.string(),
});
exports.createStripeCustomerRequest = common_1.authedServiceRequest
    .merge(zod_1.default.object({
    params: exports.createStripeCustomerParams,
}));
exports.createStripeCustomerResponse = common_1.serviceResponse.merge(zod_1.default.object({
    customerId: zod_1.default.string().optional(),
}));
/** ******************************************************************************
*  Create Stripe Session
******************************************************************************* */
exports.createStripeSessionParams = zod_1.default.object({
    priceId: zod_1.default.string(),
    invoiceId: zod_1.default.string().optional(),
});
exports.createStripeSessionRequest = common_1.authedServiceRequest
    .merge(zod_1.default.object({
    params: exports.createStripeSessionParams,
}));
exports.createStripeSessionResponse = common_1.serviceResponse.merge(zod_1.default.object({
    sessionId: zod_1.default.string().optional(),
    sessionUrl: zod_1.default.string().optional(),
}));
/** ******************************************************************************
*  Create Stripe Billing Portal Session
******************************************************************************* */
exports.createStripeBillingPortalSessionParams = zod_1.default.object({});
exports.createStripeBillingPortalSessionRequest = common_1.authedServiceRequest
    .merge(zod_1.default.object({
    params: exports.createStripeBillingPortalSessionParams,
}));
exports.createStripeBillingPortalSessionResponse = common_1.serviceResponse.merge(zod_1.default.object({
    billingPortalUrl: zod_1.default.string().optional(),
}));
//# sourceMappingURL=StripeService.js.map