import z from 'zod';
import { usage } from '../interfaces/Usage';
export declare const zInvoiceStatus: z.ZodEnum<["Pending", "Fulfilled", "Canceled", "Failed"]>;
export declare const invoice: z.ZodObject<{
    _id: z.ZodString;
    organizationId: z.ZodString;
    subscriptionId: z.ZodString;
    stripeCustomerId: z.ZodString;
    stripeSubscriptionId: z.ZodNullable<z.ZodString>;
    stripeInvoiceId: z.ZodNullable<z.ZodString>;
    stripeProductId: z.ZodNullable<z.ZodString>;
    stripePriceId: z.ZodNullable<z.ZodString>;
    status: z.ZodEnum<["Pending", "Fulfilled", "Canceled", "Failed"]>;
    usage: z.ZodObject<{
        credits: z.ZodNumber;
        documents: z.ZodNumber;
        syncs: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        credits: number;
        documents: number;
        syncs: number;
    }, {
        credits: number;
        documents: number;
        syncs: number;
    }>;
    usageLimits: z.ZodObject<{
        credits: z.ZodNumber;
        documents: z.ZodNumber;
        syncs: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        credits: number;
        documents: number;
        syncs: number;
    }, {
        credits: number;
        documents: number;
        syncs: number;
    }>;
    meta: z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNumber>;
        createdBy: z.ZodOptional<z.ZodString>;
        lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
        lastUpdatedBy: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
    organizationId: string;
    _id: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    subscriptionId: string;
    stripeCustomerId: string;
    stripeSubscriptionId: string | null;
    stripeInvoiceId: string | null;
    stripeProductId: string | null;
    stripePriceId: string | null;
    usage: {
        credits: number;
        documents: number;
        syncs: number;
    };
    usageLimits: {
        credits: number;
        documents: number;
        syncs: number;
    };
}, {
    status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
    organizationId: string;
    _id: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    subscriptionId: string;
    stripeCustomerId: string;
    stripeSubscriptionId: string | null;
    stripeInvoiceId: string | null;
    stripeProductId: string | null;
    stripePriceId: string | null;
    usage: {
        credits: number;
        documents: number;
        syncs: number;
    };
    usageLimits: {
        credits: number;
        documents: number;
        syncs: number;
    };
}>;
export type Invoice = z.infer<typeof invoice>;
export type InvoiceUsage = z.infer<typeof usage>;
export interface InvoiceService {
    create(request: CreateInvoiceRequest): Promise<CreateInvoiceResponse>;
    updateLatest(request: UpdateLatestInvoiceRequest): Promise<UpdateLatestInvoiceResponse>;
    latest(request: LatestInvoiceRequest): Promise<LatestInvoiceResponse>;
    get(request: GetInvoiceRequest): Promise<GetInvoiceResponse>;
    list(request: ListInvoicesRequest): Promise<ListInvoicesResponse>;
    superSetUsageLimits(request: SuperSetInvoiceUsageLimitsRequest): Promise<SuperSetInvoiceUsageLimitsResponse>;
}
/** ******************************************************************************
*  Create Invoice
******************************************************************************* */
export declare const createInvoiceParams: z.ZodObject<{
    stripeInvoiceId: z.ZodNullable<z.ZodString>;
    status: z.ZodEnum<["Pending", "Fulfilled", "Canceled", "Failed"]>;
}, "strip", z.ZodTypeAny, {
    status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
    stripeInvoiceId: string | null;
}, {
    status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
    stripeInvoiceId: string | null;
}>;
export declare const createInvoiceRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        stripeInvoiceId: z.ZodNullable<z.ZodString>;
        status: z.ZodEnum<["Pending", "Fulfilled", "Canceled", "Failed"]>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        stripeInvoiceId: string | null;
    }, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        stripeInvoiceId: string | null;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        stripeInvoiceId: string | null;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        stripeInvoiceId: string | null;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const createInvoiceResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    invoice: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        subscriptionId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodNullable<z.ZodString>;
        stripeInvoiceId: z.ZodNullable<z.ZodString>;
        stripeProductId: z.ZodNullable<z.ZodString>;
        stripePriceId: z.ZodNullable<z.ZodString>;
        status: z.ZodEnum<["Pending", "Fulfilled", "Canceled", "Failed"]>;
        usage: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | undefined;
}>;
export type CreateInvoiceParams = z.infer<typeof createInvoiceParams>;
export type CreateInvoiceRequest = z.infer<typeof createInvoiceRequest>;
export type CreateInvoiceResponse = z.infer<typeof createInvoiceResponse>;
/** ******************************************************************************
*  Update Latest Invoice
******************************************************************************* */
export declare const updateLatestInvoiceParams: z.ZodObject<{
    organizationId: z.ZodString;
    usageDiff: z.ZodOptional<z.ZodObject<{
        credits: z.ZodOptional<z.ZodNumber>;
        documents: z.ZodOptional<z.ZodNumber>;
        syncs: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        credits?: number | undefined;
        documents?: number | undefined;
        syncs?: number | undefined;
    }, {
        credits?: number | undefined;
        documents?: number | undefined;
        syncs?: number | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    organizationId: string;
    usageDiff?: {
        credits?: number | undefined;
        documents?: number | undefined;
        syncs?: number | undefined;
    } | undefined;
}, {
    organizationId: string;
    usageDiff?: {
        credits?: number | undefined;
        documents?: number | undefined;
        syncs?: number | undefined;
    } | undefined;
}>;
export declare const updateLatestInvoiceRequest: z.ZodObject<{
    params: z.ZodObject<{
        organizationId: z.ZodString;
        usageDiff: z.ZodOptional<z.ZodObject<{
            credits: z.ZodOptional<z.ZodNumber>;
            documents: z.ZodOptional<z.ZodNumber>;
            syncs: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        }, {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        organizationId: string;
        usageDiff?: {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        } | undefined;
    }, {
        organizationId: string;
        usageDiff?: {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        } | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        organizationId: string;
        usageDiff?: {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        } | undefined;
    };
}, {
    params: {
        organizationId: string;
        usageDiff?: {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        } | undefined;
    };
}>;
export declare const updateLatestInvoiceResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    invoice: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        subscriptionId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodNullable<z.ZodString>;
        stripeInvoiceId: z.ZodNullable<z.ZodString>;
        stripeProductId: z.ZodNullable<z.ZodString>;
        stripePriceId: z.ZodNullable<z.ZodString>;
        status: z.ZodEnum<["Pending", "Fulfilled", "Canceled", "Failed"]>;
        usage: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | undefined;
}>;
export type UpdateLatestInvoiceParams = z.infer<typeof updateLatestInvoiceParams>;
export type UpdateLatestInvoiceRequest = z.infer<typeof updateLatestInvoiceRequest>;
export type UpdateLatestInvoiceResponse = z.infer<typeof updateLatestInvoiceResponse>;
/** ******************************************************************************
*  Get Latest Invoice
******************************************************************************* */
export declare const latestInvoiceParams: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
export declare const latestInvoiceRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
}, "strip", z.ZodTypeAny, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const latestInvoiceResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    invoice: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        subscriptionId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodNullable<z.ZodString>;
        stripeInvoiceId: z.ZodNullable<z.ZodString>;
        stripeProductId: z.ZodNullable<z.ZodString>;
        stripePriceId: z.ZodNullable<z.ZodString>;
        status: z.ZodEnum<["Pending", "Fulfilled", "Canceled", "Failed"]>;
        usage: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | undefined;
}>;
export type LatestInvoiceParams = z.infer<typeof latestInvoiceParams>;
export type LatestInvoiceRequest = z.infer<typeof latestInvoiceRequest>;
export type LatestInvoiceResponse = z.infer<typeof latestInvoiceResponse>;
/** ******************************************************************************
*  Get Invoice
******************************************************************************* */
export declare const getInvoiceParams: z.ZodObject<{
    invoiceId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    invoiceId: string;
}, {
    invoiceId: string;
}>;
export declare const getInvoiceRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        invoiceId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        invoiceId: string;
    }, {
        invoiceId: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        invoiceId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        invoiceId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const getInvoiceResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    invoice: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        subscriptionId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodNullable<z.ZodString>;
        stripeInvoiceId: z.ZodNullable<z.ZodString>;
        stripeProductId: z.ZodNullable<z.ZodString>;
        stripePriceId: z.ZodNullable<z.ZodString>;
        status: z.ZodEnum<["Pending", "Fulfilled", "Canceled", "Failed"]>;
        usage: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }>>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | null | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | null | undefined;
}>;
export type GetInvoiceParams = z.infer<typeof getInvoiceParams>;
export type GetInvoiceRequest = z.infer<typeof getInvoiceRequest>;
export type GetInvoiceResponse = z.infer<typeof getInvoiceResponse>;
/** ******************************************************************************
*  List Invoices
******************************************************************************* */
export declare const listInvoicesParams: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
export declare const listInvoicesRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
}, "strip", z.ZodTypeAny, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const listInvoicesResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    invoices: z.ZodOptional<z.ZodArray<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        subscriptionId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodNullable<z.ZodString>;
        stripeInvoiceId: z.ZodNullable<z.ZodString>;
        stripeProductId: z.ZodNullable<z.ZodString>;
        stripePriceId: z.ZodNullable<z.ZodString>;
        status: z.ZodEnum<["Pending", "Fulfilled", "Canceled", "Failed"]>;
        usage: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoices?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }[] | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoices?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }[] | undefined;
}>;
export type ListInvoicesParams = z.infer<typeof listInvoicesParams>;
export type ListInvoicesRequest = z.infer<typeof listInvoicesRequest>;
export type ListInvoicesResponse = z.infer<typeof listInvoicesResponse>;
/** ******************************************************************************
*  Super Set invoice Usage Limits
******************************************************************************* */
export declare const superSetInvoiceUsageLimitsParams: z.ZodObject<{
    usageLimits: z.ZodObject<{
        credits: z.ZodNumber;
        documents: z.ZodNumber;
        syncs: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        credits: number;
        documents: number;
        syncs: number;
    }, {
        credits: number;
        documents: number;
        syncs: number;
    }>;
    resetCurrentUsage: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    usageLimits: {
        credits: number;
        documents: number;
        syncs: number;
    };
    resetCurrentUsage: boolean;
}, {
    usageLimits: {
        credits: number;
        documents: number;
        syncs: number;
    };
    resetCurrentUsage: boolean;
}>;
export declare const superSetInvoiceUsageLimitsRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        resetCurrentUsage: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        resetCurrentUsage: boolean;
    }, {
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        resetCurrentUsage: boolean;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        resetCurrentUsage: boolean;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        resetCurrentUsage: boolean;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const superSetInvoiceUsageLimitsResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    invoice: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        subscriptionId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodNullable<z.ZodString>;
        stripeInvoiceId: z.ZodNullable<z.ZodString>;
        stripeProductId: z.ZodNullable<z.ZodString>;
        stripePriceId: z.ZodNullable<z.ZodString>;
        status: z.ZodEnum<["Pending", "Fulfilled", "Canceled", "Failed"]>;
        usage: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | undefined;
}>;
export type SuperSetInvoiceUsageLimitsParams = z.infer<typeof superSetInvoiceUsageLimitsParams>;
export type SuperSetInvoiceUsageLimitsRequest = z.infer<typeof superSetInvoiceUsageLimitsRequest>;
export type SuperSetInvoiceUsageLimitsResponse = z.infer<typeof superSetInvoiceUsageLimitsResponse>;
