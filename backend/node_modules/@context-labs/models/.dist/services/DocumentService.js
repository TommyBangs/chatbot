"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.documentStatusResponse = exports.documentStatusRequest = exports.documentStatusParams = exports.listAllDocumentsResponse = exports.listAllDocumentsRequest = exports.listAllDocumentsParams = exports.listDocumentsResponse = exports.listDocumentsRequest = exports.listDocumentsParams = exports.getDocumentResponse = exports.getDocumentRequest = exports.getDocumentParams = exports.updateDocumentResponse = exports.updateDocumentRequest = exports.updateDocumentParams = exports.syncDocumentResponse = exports.syncDocumentRequest = exports.syncDocumentParams = exports.createDocumentResponse = exports.createDocumentRequest = exports.createDocumentParams = exports.documentSummary = exports.document = exports.documentImportStatus = exports.zDocumentTypes = void 0;
const zod_1 = __importDefault(require("zod"));
const SRTLine_1 = require("../interfaces/SRTLine");
const common_1 = require("../interfaces/common");
const Metadata_1 = require("../interfaces/Metadata");
exports.zDocumentTypes = zod_1.default.enum([
    'YouTube',
    'RSS',
    'WebPage',
    'File',
]);
exports.documentImportStatus = zod_1.default.enum([
    'Pending',
    'Running',
    'Complete',
    'Failed',
]);
exports.document = zod_1.default.object({
    _id: zod_1.default.string(),
    organizationId: zod_1.default.string(),
    sourceId: zod_1.default.string(),
    syncId: zod_1.default.string(),
    title: zod_1.default.string(),
    description: zod_1.default.string(),
    releasedAt: zod_1.default.number(),
    views: zod_1.default.number().optional(),
    type: exports.zDocumentTypes,
    url: zod_1.default.string().url(),
    domain: zod_1.default.string().url().optional(),
    lang: zod_1.default.string().optional(),
    audioFileId: zod_1.default.string(),
    imageFileId: zod_1.default.string(),
    predictionId: zod_1.default.string().optional(),
    raw: zod_1.default.string().nullable(),
    srt: zod_1.default.array(SRTLine_1.srtLine),
    importStatus: exports.documentImportStatus,
    archived: zod_1.default.boolean().optional(),
    deleted: zod_1.default.boolean().optional(),
    meta: Metadata_1.metadata,
});
exports.documentSummary = exports.document.omit({
    raw: true,
    srt: true,
});
/** ******************************************************************************
*  Create Document
******************************************************************************* */
exports.createDocumentParams = zod_1.default.object({
    organizationId: zod_1.default.string(),
    sourceId: zod_1.default.string(),
    syncId: zod_1.default.string(),
    imageFileId: zod_1.default.string(),
    type: exports.zDocumentTypes,
    url: zod_1.default.string().url(),
    domain: zod_1.default.string().url().optional(),
    lang: zod_1.default.string().optional(),
    raw: zod_1.default.string().optional(),
    title: zod_1.default.string().optional(),
});
exports.createDocumentRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.createDocumentParams,
}));
exports.createDocumentResponse = common_1.serviceResponse.merge(zod_1.default.object({
    document: exports.document.nullable().optional(),
}));
/** ******************************************************************************
*  Sync Document
******************************************************************************* */
exports.syncDocumentParams = zod_1.default.object({
    _id: zod_1.default.string(),
    syncId: zod_1.default.string(),
    deleted: zod_1.default.boolean().optional(),
});
exports.syncDocumentRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.syncDocumentParams,
}));
exports.syncDocumentResponse = common_1.serviceResponse.merge(zod_1.default.object({
    document: exports.document.nullable().optional(),
}));
/** ******************************************************************************
*  Update Document
******************************************************************************* */
exports.updateDocumentParams = zod_1.default.object({
    document: zod_1.default.object({
        _id: zod_1.default.string().optional(),
        organizationId: zod_1.default.string().optional(),
        sourceId: zod_1.default.string().optional(),
        syncId: zod_1.default.string().optional(),
        title: zod_1.default.string().optional(),
        description: zod_1.default.string().optional(),
        releasedAt: zod_1.default.number().optional(),
        views: zod_1.default.number().optional(),
        type: exports.zDocumentTypes.optional(),
        url: zod_1.default.string().url().optional(),
        domain: zod_1.default.string().url().optional(),
        lang: zod_1.default.string().optional(),
        audioFileId: zod_1.default.string().optional(),
        imageFileId: zod_1.default.string().optional(),
        predictionId: zod_1.default.string().optional(),
        raw: zod_1.default.string().nullable().optional(),
        srt: zod_1.default.array(SRTLine_1.srtLine).optional(),
        importStatus: exports.documentImportStatus.optional(),
        archived: zod_1.default.boolean().optional(),
        deleted: zod_1.default.boolean().optional(),
        meta: Metadata_1.metadata.optional(),
    }),
});
exports.updateDocumentRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.updateDocumentParams,
}));
exports.updateDocumentResponse = common_1.serviceResponse.merge(zod_1.default.object({
    document: exports.document.nullable().optional(),
}));
/** ******************************************************************************
*  Get Document
******************************************************************************* */
exports.getDocumentParams = zod_1.default.object({
    documentId: zod_1.default.string(),
});
exports.getDocumentRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.getDocumentParams,
}));
exports.getDocumentResponse = common_1.serviceResponse.merge(zod_1.default.object({
    document: exports.document.nullable().optional(),
}));
/** ******************************************************************************
*  List Documents
******************************************************************************* */
exports.listDocumentsParams = zod_1.default.object({
    sourceId: zod_1.default.string(),
    search: zod_1.default.string().optional(),
    offset: zod_1.default.number().optional(),
    pageSize: zod_1.default.number().optional(),
});
exports.listDocumentsRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.listDocumentsParams,
}));
exports.listDocumentsResponse = common_1.serviceResponse.merge(zod_1.default.object({
    documents: zod_1.default.array(exports.documentSummary).optional(),
    total: zod_1.default.number().optional(),
}));
/** ******************************************************************************
*  List All Documents
******************************************************************************* */
exports.listAllDocumentsParams = zod_1.default.object({
    sourceId: zod_1.default.string(),
});
exports.listAllDocumentsRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.listAllDocumentsParams,
}));
exports.listAllDocumentsResponse = common_1.serviceResponse.merge(zod_1.default.object({
    documents: zod_1.default.array(exports.documentSummary).optional(),
}));
/** ******************************************************************************
*  Document Status
******************************************************************************* */
exports.documentStatusParams = zod_1.default.object({
    sourceId: zod_1.default.string(),
});
exports.documentStatusRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.documentStatusParams,
}));
exports.documentStatusResponse = common_1.serviceResponse.merge(zod_1.default.object({
    statuses: zod_1.default.object({
        Pending: zod_1.default.number(),
        Processing: zod_1.default.number(),
        Complete: zod_1.default.number(),
        Failed: zod_1.default.number(),
    }).optional(),
}));
//# sourceMappingURL=DocumentService.js.map