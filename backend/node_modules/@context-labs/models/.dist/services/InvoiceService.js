"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.superSetInvoiceUsageLimitsResponse = exports.superSetInvoiceUsageLimitsRequest = exports.superSetInvoiceUsageLimitsParams = exports.listInvoicesResponse = exports.listInvoicesRequest = exports.listInvoicesParams = exports.getInvoiceResponse = exports.getInvoiceRequest = exports.getInvoiceParams = exports.latestInvoiceResponse = exports.latestInvoiceRequest = exports.latestInvoiceParams = exports.updateLatestInvoiceResponse = exports.updateLatestInvoiceRequest = exports.updateLatestInvoiceParams = exports.createInvoiceResponse = exports.createInvoiceRequest = exports.createInvoiceParams = exports.invoice = exports.zInvoiceStatus = void 0;
const zod_1 = __importDefault(require("zod"));
const Usage_1 = require("../interfaces/Usage");
const common_1 = require("../interfaces/common");
const Metadata_1 = require("../interfaces/Metadata");
exports.zInvoiceStatus = zod_1.default.enum(['Pending', 'Fulfilled', 'Canceled', 'Failed']);
exports.invoice = zod_1.default.object({
    _id: zod_1.default.string(),
    organizationId: zod_1.default.string(),
    subscriptionId: zod_1.default.string(),
    stripeCustomerId: zod_1.default.string(),
    stripeSubscriptionId: zod_1.default.string().nullable(),
    stripeInvoiceId: zod_1.default.string().nullable(),
    stripeProductId: zod_1.default.string().nullable(),
    stripePriceId: zod_1.default.string().nullable(),
    status: exports.zInvoiceStatus,
    usage: Usage_1.usage,
    usageLimits: Usage_1.usage,
    meta: Metadata_1.metadata,
});
/** ******************************************************************************
*  Create Invoice
******************************************************************************* */
exports.createInvoiceParams = zod_1.default.object({
    stripeInvoiceId: zod_1.default.string().nullable(),
    status: exports.zInvoiceStatus,
});
exports.createInvoiceRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.createInvoiceParams,
}));
exports.createInvoiceResponse = common_1.serviceResponse.merge(zod_1.default.object({
    invoice: exports.invoice.optional(),
}));
/** ******************************************************************************
*  Update Latest Invoice
******************************************************************************* */
exports.updateLatestInvoiceParams = zod_1.default.object({
    organizationId: zod_1.default.string(),
    usageDiff: Usage_1.updateUsage.optional(),
});
exports.updateLatestInvoiceRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.updateLatestInvoiceParams,
}));
exports.updateLatestInvoiceResponse = common_1.serviceResponse.merge(zod_1.default.object({
    invoice: exports.invoice.optional(),
}));
/** ******************************************************************************
*  Get Latest Invoice
******************************************************************************* */
exports.latestInvoiceParams = zod_1.default.object({});
exports.latestInvoiceRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.latestInvoiceParams,
}));
exports.latestInvoiceResponse = common_1.serviceResponse.merge(zod_1.default.object({
    invoice: exports.invoice.optional(),
}));
/** ******************************************************************************
*  Get Invoice
******************************************************************************* */
exports.getInvoiceParams = zod_1.default.object({
    invoiceId: zod_1.default.string(),
});
exports.getInvoiceRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.getInvoiceParams,
}));
exports.getInvoiceResponse = common_1.serviceResponse.merge(zod_1.default.object({
    invoice: exports.invoice.nullable().optional(),
}));
/** ******************************************************************************
*  List Invoices
******************************************************************************* */
exports.listInvoicesParams = zod_1.default.object({});
exports.listInvoicesRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.listInvoicesParams,
}));
exports.listInvoicesResponse = common_1.serviceResponse.merge(zod_1.default.object({
    invoices: zod_1.default.array(exports.invoice).optional(),
}));
/** ******************************************************************************
*  Super Set invoice Usage Limits
******************************************************************************* */
exports.superSetInvoiceUsageLimitsParams = zod_1.default.object({
    usageLimits: Usage_1.usage,
    resetCurrentUsage: zod_1.default.boolean(),
});
exports.superSetInvoiceUsageLimitsRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.superSetInvoiceUsageLimitsParams,
}));
exports.superSetInvoiceUsageLimitsResponse = common_1.serviceResponse.merge(zod_1.default.object({
    invoice: exports.invoice.optional(),
}));
//# sourceMappingURL=InvoiceService.js.map