"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.superListUsersResponse = exports.superListUsersRequest = exports.superListUsersParams = exports.listUserOrganizationsResponse = exports.listUserOrganizationsRequest = exports.listUserOrganizationsParams = exports.listUsersResponse = exports.listUsersRequest = exports.listUsersParams = exports.getUserByEmailResponse = exports.getUserByEmailRequest = exports.getUserByEmailParams = exports.getUserResponse = exports.getUserRequest = exports.getUserParams = exports.setUserOrganizationResponse = exports.setUserOrganizationRequest = exports.setUserOrganizationParams = exports.oAuthloginUserResponse = exports.oAuthloginUserRequest = exports.oAuthloginUserParams = exports.loginUserResponse = exports.loginUserRequest = exports.loginUserParams = exports.registerUserResponse = exports.registerUserRequest = exports.registerUserParams = exports.authenticationResponse = exports.user = void 0;
const zod_1 = __importDefault(require("zod"));
const common_1 = require("../interfaces/common");
const Metadata_1 = require("../interfaces/Metadata");
const RoleService_1 = require("./RoleService");
const OrganizationService_1 = require("./OrganizationService");
exports.user = zod_1.default.object({
    _id: zod_1.default.string(),
    organizationId: zod_1.default.string(),
    email: zod_1.default.string(),
    firstName: zod_1.default.string(),
    lastName: zod_1.default.string(),
    passwordHash: zod_1.default.string(),
    meta: Metadata_1.metadata,
});
exports.authenticationResponse = common_1.serviceResponse.merge(zod_1.default.object({
    user: exports.user.optional(),
    organization: OrganizationService_1.organization.optional(),
    token: common_1.authToken.optional(),
    roles: zod_1.default.array(RoleService_1.role).optional(),
}));
/** ******************************************************************************
*  Register User
******************************************************************************* */
exports.registerUserParams = zod_1.default.object({
    firstName: zod_1.default.string(),
    lastName: zod_1.default.string(),
    email: zod_1.default.string().email(),
    password: zod_1.default.string(),
});
exports.registerUserRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.registerUserParams,
}));
exports.registerUserResponse = exports.authenticationResponse;
/** ******************************************************************************
*  Login User
******************************************************************************* */
exports.loginUserParams = zod_1.default.object({
    email: zod_1.default.string().email(),
    password: zod_1.default.string(),
});
exports.loginUserRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.loginUserParams,
}));
exports.loginUserResponse = exports.authenticationResponse;
/** ******************************************************************************
*  OAuth Login User
******************************************************************************* */
exports.oAuthloginUserParams = zod_1.default.object({
    email: zod_1.default.string().email(),
});
exports.oAuthloginUserRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.oAuthloginUserParams,
}));
exports.oAuthloginUserResponse = exports.authenticationResponse;
/** ******************************************************************************
*  Set Organization
******************************************************************************* */
exports.setUserOrganizationParams = zod_1.default.object({
    organizationId: zod_1.default.string(),
});
exports.setUserOrganizationRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.setUserOrganizationParams,
}));
exports.setUserOrganizationResponse = exports.authenticationResponse;
/** ******************************************************************************
*  Get User
******************************************************************************* */
exports.getUserParams = zod_1.default.object({});
exports.getUserRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.getUserParams,
}));
exports.getUserResponse = common_1.serviceResponse.merge(zod_1.default.object({
    user: exports.user.optional(),
}));
/** ******************************************************************************
*  Get User By Email
******************************************************************************* */
exports.getUserByEmailParams = zod_1.default.object({
    userEmail: zod_1.default.string(),
});
exports.getUserByEmailRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.getUserByEmailParams,
}));
exports.getUserByEmailResponse = common_1.serviceResponse.merge(zod_1.default.object({
    user: exports.user.nullable().optional(),
}));
/** ******************************************************************************
*  List Users
******************************************************************************* */
exports.listUsersParams = zod_1.default.object({
    _ids: zod_1.default.array(zod_1.default.string()),
});
exports.listUsersRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.listUsersParams,
}));
exports.listUsersResponse = common_1.serviceResponse.merge(zod_1.default.object({
    users: zod_1.default.array(exports.user).optional(),
}));
/** ******************************************************************************
*  List Users
******************************************************************************* */
exports.listUserOrganizationsParams = zod_1.default.object({});
exports.listUserOrganizationsRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.listUserOrganizationsParams,
}));
exports.listUserOrganizationsResponse = common_1.serviceResponse.merge(zod_1.default.object({
    organizations: zod_1.default.array(OrganizationService_1.organization).optional(),
}));
/** ******************************************************************************
*  Super List Users
******************************************************************************* */
exports.superListUsersParams = zod_1.default.object({});
exports.superListUsersRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.superListUsersParams,
}));
exports.superListUsersResponse = common_1.serviceResponse.merge(zod_1.default.object({
    users: zod_1.default.array(exports.user).optional(),
}));
//# sourceMappingURL=UserService.js.map