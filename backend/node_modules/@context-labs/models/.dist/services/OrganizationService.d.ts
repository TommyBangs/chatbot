import z from 'zod';
export declare const organization: z.ZodObject<{
    _id: z.ZodString;
    stripeCustomerId: z.ZodString;
    userId: z.ZodString;
    name: z.ZodString;
    imageFileId: z.ZodNullable<z.ZodString>;
    description: z.ZodNullable<z.ZodString>;
    meta: z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNumber>;
        createdBy: z.ZodOptional<z.ZodString>;
        lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
        lastUpdatedBy: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    userId: string;
    _id: string;
    name: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    stripeCustomerId: string;
    description: string | null;
    imageFileId: string | null;
}, {
    userId: string;
    _id: string;
    name: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    stripeCustomerId: string;
    description: string | null;
    imageFileId: string | null;
}>;
export type Organization = z.infer<typeof organization>;
export interface OrganizationService {
    create(request: CreateOrganizationRequest): Promise<CreateOrganizationResponse>;
    edit(request: EditOrganizationRequest): Promise<EditOrganizationResponse>;
    get(request: GetOrganizationRequest): Promise<GetOrganizationResponse>;
    list(request: ListOrganizationsRequest): Promise<ListOrganizationsResponse>;
    users(request: ListOrganizationUsersRequest): Promise<ListOrganizationUsersResponse>;
    superList(request: SuperListOrganizationsRequest): Promise<SuperListOrganizationsResponse>;
    superSetOwner(request: SuperSetOrganizationOwnerRequest): Promise<SuperSetOrganizationOwnerResponse>;
}
/** ******************************************************************************
*  Create Organization
******************************************************************************* */
export declare const createOrganizationParams: z.ZodObject<{
    stripeCustomerId: z.ZodOptional<z.ZodString>;
    name: z.ZodString;
    imageFileId: z.ZodNullable<z.ZodString>;
    description: z.ZodNullable<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    name: string;
    description: string | null;
    imageFileId: string | null;
    stripeCustomerId?: string | undefined;
}, {
    name: string;
    description: string | null;
    imageFileId: string | null;
    stripeCustomerId?: string | undefined;
}>;
export declare const createOrganizationRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        stripeCustomerId: z.ZodOptional<z.ZodString>;
        name: z.ZodString;
        imageFileId: z.ZodNullable<z.ZodString>;
        description: z.ZodNullable<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        description: string | null;
        imageFileId: string | null;
        stripeCustomerId?: string | undefined;
    }, {
        name: string;
        description: string | null;
        imageFileId: string | null;
        stripeCustomerId?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        name: string;
        description: string | null;
        imageFileId: string | null;
        stripeCustomerId?: string | undefined;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        name: string;
        description: string | null;
        imageFileId: string | null;
        stripeCustomerId?: string | undefined;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const createOrganizationResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    organization: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        stripeCustomerId: z.ZodString;
        userId: z.ZodString;
        name: z.ZodString;
        imageFileId: z.ZodNullable<z.ZodString>;
        description: z.ZodNullable<z.ZodString>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organization?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organization?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    } | undefined;
}>;
export type CreateOrganizationParams = z.infer<typeof createOrganizationParams>;
export type CreateOrganizationRequest = z.infer<typeof createOrganizationRequest>;
export type CreateOrganizationResponse = z.infer<typeof createOrganizationResponse>;
/** ******************************************************************************
*  Edit Organization
******************************************************************************* */
export declare const editOrganizationParams: z.ZodObject<{
    _id: z.ZodString;
    name: z.ZodString;
    imageFileId: z.ZodNullable<z.ZodString>;
    description: z.ZodNullable<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    _id: string;
    name: string;
    description: string | null;
    imageFileId: string | null;
}, {
    _id: string;
    name: string;
    description: string | null;
    imageFileId: string | null;
}>;
export declare const editOrganizationRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        _id: z.ZodString;
        name: z.ZodString;
        imageFileId: z.ZodNullable<z.ZodString>;
        description: z.ZodNullable<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        _id: string;
        name: string;
        description: string | null;
        imageFileId: string | null;
    }, {
        _id: string;
        name: string;
        description: string | null;
        imageFileId: string | null;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        _id: string;
        name: string;
        description: string | null;
        imageFileId: string | null;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        _id: string;
        name: string;
        description: string | null;
        imageFileId: string | null;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const editOrganizationResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    organization: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        stripeCustomerId: z.ZodString;
        userId: z.ZodString;
        name: z.ZodString;
        imageFileId: z.ZodNullable<z.ZodString>;
        description: z.ZodNullable<z.ZodString>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organization?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organization?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    } | undefined;
}>;
export type EditOrganizationParams = z.infer<typeof editOrganizationParams>;
export type EditOrganizationRequest = z.infer<typeof editOrganizationRequest>;
export type EditOrganizationResponse = z.infer<typeof editOrganizationResponse>;
/** ******************************************************************************
*  Get Organization
******************************************************************************* */
export declare const getOrganizationParams: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
export declare const getOrganizationRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
}, "strip", z.ZodTypeAny, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const getOrganizationResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    organization: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        stripeCustomerId: z.ZodString;
        userId: z.ZodString;
        name: z.ZodString;
        imageFileId: z.ZodNullable<z.ZodString>;
        description: z.ZodNullable<z.ZodString>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organization?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organization?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    } | undefined;
}>;
export type GetOrganizationParams = z.infer<typeof getOrganizationParams>;
export type GetOrganizationRequest = z.infer<typeof getOrganizationRequest>;
export type GetOrganizationResponse = z.infer<typeof getOrganizationResponse>;
/** ******************************************************************************
*  List Organizations
******************************************************************************* */
export declare const listOrganizationsParams: z.ZodObject<{
    _ids: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    _ids: string[];
}, {
    _ids: string[];
}>;
export declare const listOrganizationsRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        _ids: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        _ids: string[];
    }, {
        _ids: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        _ids: string[];
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        _ids: string[];
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const listOrganizationsResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    organizations: z.ZodOptional<z.ZodArray<z.ZodObject<{
        _id: z.ZodString;
        stripeCustomerId: z.ZodString;
        userId: z.ZodString;
        name: z.ZodString;
        imageFileId: z.ZodNullable<z.ZodString>;
        description: z.ZodNullable<z.ZodString>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organizations?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }[] | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organizations?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }[] | undefined;
}>;
export type ListOrganizationsParams = z.infer<typeof listOrganizationsParams>;
export type ListOrganizationsRequest = z.infer<typeof listOrganizationsRequest>;
export type ListOrganizationsResponse = z.infer<typeof listOrganizationsResponse>;
/** ******************************************************************************
*  List Organization Users
******************************************************************************* */
export declare const listOrganizationUsersParams: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
export declare const listOrganizationUsersRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
}, "strip", z.ZodTypeAny, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const listOrganizationUsersResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    users: z.ZodOptional<z.ZodArray<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        email: z.ZodString;
        firstName: z.ZodString;
        lastName: z.ZodString;
        passwordHash: z.ZodString;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        email: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        firstName: string;
        lastName: string;
        passwordHash: string;
    }, {
        email: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        firstName: string;
        lastName: string;
        passwordHash: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    users?: {
        email: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        firstName: string;
        lastName: string;
        passwordHash: string;
    }[] | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    users?: {
        email: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        firstName: string;
        lastName: string;
        passwordHash: string;
    }[] | undefined;
}>;
export type ListOrganizationUsersParams = z.infer<typeof listOrganizationUsersParams>;
export type ListOrganizationUsersRequest = z.infer<typeof listOrganizationUsersRequest>;
export type ListOrganizationUsersResponse = z.infer<typeof listOrganizationUsersResponse>;
/** ******************************************************************************
*  Super List Organizations
******************************************************************************* */
export declare const superListOrganizationsParams: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
export declare const superListOrganizationsRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
}, "strip", z.ZodTypeAny, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const superListOrganizationsResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    organizations: z.ZodOptional<z.ZodArray<z.ZodObject<{
        _id: z.ZodString;
        stripeCustomerId: z.ZodString;
        userId: z.ZodString;
        name: z.ZodString;
        imageFileId: z.ZodNullable<z.ZodString>;
        description: z.ZodNullable<z.ZodString>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organizations?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }[] | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organizations?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }[] | undefined;
}>;
export type SuperListOrganizationsParams = z.infer<typeof superListOrganizationsParams>;
export type SuperListOrganizationsRequest = z.infer<typeof superListOrganizationsRequest>;
export type SuperListOrganizationsResponse = z.infer<typeof superListOrganizationsResponse>;
/** ******************************************************************************
*  Super Set Organization Owner
******************************************************************************* */
export declare const superSetOrganizationOwnerParams: z.ZodObject<{
    userId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    userId: string;
}, {
    userId: string;
}>;
export declare const superSetOrganizationOwnerRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        userId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        userId: string;
    }, {
        userId: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        userId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        userId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const superSetOrganizationOwnerResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    organization: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        stripeCustomerId: z.ZodString;
        userId: z.ZodString;
        name: z.ZodString;
        imageFileId: z.ZodNullable<z.ZodString>;
        description: z.ZodNullable<z.ZodString>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }, {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    }>>;
    role: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        userId: z.ZodNullable<z.ZodString>;
        userEmail: z.ZodNullable<z.ZodString>;
        type: z.ZodEnum<["Owner", "Member"]>;
        acceptedAt: z.ZodNullable<z.ZodNumber>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "Owner" | "Member";
        userId: string | null;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        userEmail: string | null;
        acceptedAt: number | null;
    }, {
        type: "Owner" | "Member";
        userId: string | null;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        userEmail: string | null;
        acceptedAt: number | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organization?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    } | undefined;
    role?: {
        type: "Owner" | "Member";
        userId: string | null;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        userEmail: string | null;
        acceptedAt: number | null;
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    organization?: {
        userId: string;
        _id: string;
        name: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        description: string | null;
        imageFileId: string | null;
    } | undefined;
    role?: {
        type: "Owner" | "Member";
        userId: string | null;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        userEmail: string | null;
        acceptedAt: number | null;
    } | undefined;
}>;
export type SuperSetOrganizationOwnerParams = z.infer<typeof superSetOrganizationOwnerParams>;
export type SuperSetOrganizationOwnerRequest = z.infer<typeof superSetOrganizationOwnerRequest>;
export type SuperSetOrganizationOwnerResponse = z.infer<typeof superSetOrganizationOwnerResponse>;
