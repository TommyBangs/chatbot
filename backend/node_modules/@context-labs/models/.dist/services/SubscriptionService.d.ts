import z from 'zod';
export declare const zSubscriptionStatus: z.ZodEnum<["Pending", "Active", "Canceled"]>;
export declare const subscriptionUpgrade: z.ZodObject<{
    productId: z.ZodString;
    priceId: z.ZodString;
    botId: z.ZodNullable<z.ZodString>;
    sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    productId: string;
    priceId: string;
    botId: string | null;
    sourceIds: string[] | null;
}, {
    productId: string;
    priceId: string;
    botId: string | null;
    sourceIds: string[] | null;
}>;
export declare const subscription: z.ZodObject<{
    _id: z.ZodString;
    organizationId: z.ZodString;
    stripeCustomerId: z.ZodString;
    stripeSubscriptionId: z.ZodString;
    stripeProductId: z.ZodString;
    stripePriceId: z.ZodString;
    status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
    upgrade: z.ZodNullable<z.ZodObject<{
        productId: z.ZodString;
        priceId: z.ZodString;
        botId: z.ZodNullable<z.ZodString>;
        sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        productId: string;
        priceId: string;
        botId: string | null;
        sourceIds: string[] | null;
    }, {
        productId: string;
        priceId: string;
        botId: string | null;
        sourceIds: string[] | null;
    }>>;
    usageLimits: z.ZodObject<{
        credits: z.ZodNumber;
        documents: z.ZodNumber;
        syncs: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        credits: number;
        documents: number;
        syncs: number;
    }, {
        credits: number;
        documents: number;
        syncs: number;
    }>;
    meta: z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNumber>;
        createdBy: z.ZodOptional<z.ZodString>;
        lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
        lastUpdatedBy: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    status: "Pending" | "Canceled" | "Active";
    organizationId: string;
    _id: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    stripeCustomerId: string;
    stripeSubscriptionId: string;
    stripeProductId: string;
    stripePriceId: string;
    usageLimits: {
        credits: number;
        documents: number;
        syncs: number;
    };
    upgrade: {
        productId: string;
        priceId: string;
        botId: string | null;
        sourceIds: string[] | null;
    } | null;
}, {
    status: "Pending" | "Canceled" | "Active";
    organizationId: string;
    _id: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    stripeCustomerId: string;
    stripeSubscriptionId: string;
    stripeProductId: string;
    stripePriceId: string;
    usageLimits: {
        credits: number;
        documents: number;
        syncs: number;
    };
    upgrade: {
        productId: string;
        priceId: string;
        botId: string | null;
        sourceIds: string[] | null;
    } | null;
}>;
export type Subscription = z.infer<typeof subscription>;
export type SubscriptionUpgrade = z.infer<typeof subscriptionUpgrade>;
export interface SubscriptionService {
    create(request: CreateSubscriptionRequest): Promise<CreateSubscriptionResponse>;
    stageUpgrade(request: StageUpgradeSubscriptionRequest): Promise<StageUpgradeSubscriptionResponse>;
    upgrade(request: UpgradeSubscriptionRequest): Promise<UpgradeSubscriptionResponse>;
    finalizeUpgrade(request: FinalizeUpgradeSubscriptionRequest): Promise<FinalizeUpgradeSubscriptionResponse>;
    syncUpgrade(request: SyncSubscriptionUpgradeRequest): Promise<SyncSubscriptionUpgradeResponse>;
    latest(request: LatestSubscriptionRequest): Promise<LatestSubscriptionResponse>;
    get(request: GetSubscriptionRequest): Promise<GetSubscriptionResponse>;
    list(request: ListSubscriptionsRequest): Promise<ListSubscriptionsResponse>;
    superSetUsageLimits(request: SuperSetSubscriptionUsageLimitsRequest): Promise<SuperSetSubscriptionUsageLimitsResponse>;
}
/** ******************************************************************************
*  Create Subscription
******************************************************************************* */
export declare const createSubscriptionParams: z.ZodObject<{
    stripeCustomerId: z.ZodString;
    stripeSubscriptionId: z.ZodNullable<z.ZodString>;
    stripeProductId: z.ZodNullable<z.ZodString>;
    stripePriceId: z.ZodNullable<z.ZodString>;
    status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
}, "strip", z.ZodTypeAny, {
    status: "Pending" | "Canceled" | "Active";
    stripeCustomerId: string;
    stripeSubscriptionId: string | null;
    stripeProductId: string | null;
    stripePriceId: string | null;
}, {
    status: "Pending" | "Canceled" | "Active";
    stripeCustomerId: string;
    stripeSubscriptionId: string | null;
    stripeProductId: string | null;
    stripePriceId: string | null;
}>;
export declare const createSubscriptionRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodNullable<z.ZodString>;
        stripeProductId: z.ZodNullable<z.ZodString>;
        stripePriceId: z.ZodNullable<z.ZodString>;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        status: "Pending" | "Canceled" | "Active";
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        status: "Pending" | "Canceled" | "Active";
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const createSubscriptionResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    subscription: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodString;
        stripeProductId: z.ZodString;
        stripePriceId: z.ZodString;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
        upgrade: z.ZodNullable<z.ZodObject<{
            productId: z.ZodString;
            priceId: z.ZodString;
            botId: z.ZodNullable<z.ZodString>;
            sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }>>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}>;
export type CreateSubscriptionParams = z.infer<typeof createSubscriptionParams>;
export type CreateSubscriptionRequest = z.infer<typeof createSubscriptionRequest>;
export type CreateSubscriptionResponse = z.infer<typeof createSubscriptionResponse>;
/** ******************************************************************************
*  Stage Upgrade Subscription
******************************************************************************* */
export declare const stageUpgradeSubscriptionParams: z.ZodObject<{
    botId: z.ZodNullable<z.ZodString>;
    sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
    usage: z.ZodOptional<z.ZodObject<{
        credits: z.ZodOptional<z.ZodNumber>;
        documents: z.ZodOptional<z.ZodNumber>;
        syncs: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        credits?: number | undefined;
        documents?: number | undefined;
        syncs?: number | undefined;
    }, {
        credits?: number | undefined;
        documents?: number | undefined;
        syncs?: number | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    botId: string | null;
    sourceIds: string[] | null;
    usage?: {
        credits?: number | undefined;
        documents?: number | undefined;
        syncs?: number | undefined;
    } | undefined;
}, {
    botId: string | null;
    sourceIds: string[] | null;
    usage?: {
        credits?: number | undefined;
        documents?: number | undefined;
        syncs?: number | undefined;
    } | undefined;
}>;
export declare const stageUpgradeSubscriptionRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        botId: z.ZodNullable<z.ZodString>;
        sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        usage: z.ZodOptional<z.ZodObject<{
            credits: z.ZodOptional<z.ZodNumber>;
            documents: z.ZodOptional<z.ZodNumber>;
            syncs: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        }, {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        botId: string | null;
        sourceIds: string[] | null;
        usage?: {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        } | undefined;
    }, {
        botId: string | null;
        sourceIds: string[] | null;
        usage?: {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        } | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        botId: string | null;
        sourceIds: string[] | null;
        usage?: {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        } | undefined;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        botId: string | null;
        sourceIds: string[] | null;
        usage?: {
            credits?: number | undefined;
            documents?: number | undefined;
            syncs?: number | undefined;
        } | undefined;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const stageUpgradeSubscriptionResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    subscription: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodString;
        stripeProductId: z.ZodString;
        stripePriceId: z.ZodString;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
        upgrade: z.ZodNullable<z.ZodObject<{
            productId: z.ZodString;
            priceId: z.ZodString;
            botId: z.ZodNullable<z.ZodString>;
            sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }>>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}>;
export type StageUpgradeSubscriptionParams = z.infer<typeof stageUpgradeSubscriptionParams>;
export type StageUpgradeSubscriptionRequest = z.infer<typeof stageUpgradeSubscriptionRequest>;
export type StageUpgradeSubscriptionResponse = z.infer<typeof stageUpgradeSubscriptionResponse>;
/** ******************************************************************************
*  Upgrade Subscription
******************************************************************************* */
export declare const uprgadeSubscriptionParams: z.ZodObject<{
    productId: z.ZodString;
    priceId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    productId: string;
    priceId: string;
}, {
    productId: string;
    priceId: string;
}>;
export declare const uprgadeSubscriptionRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        productId: z.ZodString;
        priceId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        productId: string;
        priceId: string;
    }, {
        productId: string;
        priceId: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        productId: string;
        priceId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        productId: string;
        priceId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const uprgadeSubscriptionResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    subscription: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodString;
        stripeProductId: z.ZodString;
        stripePriceId: z.ZodString;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
        upgrade: z.ZodNullable<z.ZodObject<{
            productId: z.ZodString;
            priceId: z.ZodString;
            botId: z.ZodNullable<z.ZodString>;
            sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }>>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }>>;
    sessionUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    redirectUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
    sessionUrl?: string | null | undefined;
    redirectUrl?: string | null | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
    sessionUrl?: string | null | undefined;
    redirectUrl?: string | null | undefined;
}>;
export type UpgradeSubscriptionParams = z.infer<typeof uprgadeSubscriptionParams>;
export type UpgradeSubscriptionRequest = z.infer<typeof uprgadeSubscriptionRequest>;
export type UpgradeSubscriptionResponse = z.infer<typeof uprgadeSubscriptionResponse>;
/** ******************************************************************************
*  Finalize Subscription
******************************************************************************* */
export declare const finalizeUpgradeSubscriptionParams: z.ZodObject<{
    stripeSubscriptionId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    stripeSubscriptionId: string;
}, {
    stripeSubscriptionId: string;
}>;
export declare const finalizeUpgradeSubscriptionRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        stripeSubscriptionId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        stripeSubscriptionId: string;
    }, {
        stripeSubscriptionId: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        stripeSubscriptionId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        stripeSubscriptionId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const finalizeUpgradeSubscriptionResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    subscription: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodString;
        stripeProductId: z.ZodString;
        stripePriceId: z.ZodString;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
        upgrade: z.ZodNullable<z.ZodObject<{
            productId: z.ZodString;
            priceId: z.ZodString;
            botId: z.ZodNullable<z.ZodString>;
            sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }>>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}>;
export type FinalizeUpgradeSubscriptionParams = z.infer<typeof finalizeUpgradeSubscriptionParams>;
export type FinalizeUpgradeSubscriptionRequest = z.infer<typeof finalizeUpgradeSubscriptionRequest>;
export type FinalizeUpgradeSubscriptionResponse = z.infer<typeof finalizeUpgradeSubscriptionResponse>;
/** ******************************************************************************
*  Sync Subscription Upgrade
******************************************************************************* */
export declare const syncSubscriptionUpgradeParams: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
export declare const syncSubscriptionUpgradeRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
}, "strip", z.ZodTypeAny, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const syncSubscriptionUpgradeResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    subscription: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodString;
        stripeProductId: z.ZodString;
        stripePriceId: z.ZodString;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
        upgrade: z.ZodNullable<z.ZodObject<{
            productId: z.ZodString;
            priceId: z.ZodString;
            botId: z.ZodNullable<z.ZodString>;
            sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }>>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}>;
export type SyncSubscriptionUpgradeParams = z.infer<typeof syncSubscriptionUpgradeParams>;
export type SyncSubscriptionUpgradeRequest = z.infer<typeof syncSubscriptionUpgradeRequest>;
export type SyncSubscriptionUpgradeResponse = z.infer<typeof syncSubscriptionUpgradeResponse>;
/** ******************************************************************************
*  Update Latest Subscription
******************************************************************************* */
export declare const updateLatestSubscriptionParams: z.ZodObject<{
    _id: z.ZodString;
    organizationId: z.ZodString;
    stripeCustomerId: z.ZodString;
    stripeSubscriptionId: z.ZodString;
    stripeProductId: z.ZodString;
    stripePriceId: z.ZodString;
    status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
    upgrade: z.ZodNullable<z.ZodObject<{
        productId: z.ZodString;
        priceId: z.ZodString;
        botId: z.ZodNullable<z.ZodString>;
        sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        productId: string;
        priceId: string;
        botId: string | null;
        sourceIds: string[] | null;
    }, {
        productId: string;
        priceId: string;
        botId: string | null;
        sourceIds: string[] | null;
    }>>;
    usageLimits: z.ZodObject<{
        credits: z.ZodNumber;
        documents: z.ZodNumber;
        syncs: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        credits: number;
        documents: number;
        syncs: number;
    }, {
        credits: number;
        documents: number;
        syncs: number;
    }>;
    meta: z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNumber>;
        createdBy: z.ZodOptional<z.ZodString>;
        lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
        lastUpdatedBy: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    status: "Pending" | "Canceled" | "Active";
    organizationId: string;
    _id: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    stripeCustomerId: string;
    stripeSubscriptionId: string;
    stripeProductId: string;
    stripePriceId: string;
    usageLimits: {
        credits: number;
        documents: number;
        syncs: number;
    };
    upgrade: {
        productId: string;
        priceId: string;
        botId: string | null;
        sourceIds: string[] | null;
    } | null;
}, {
    status: "Pending" | "Canceled" | "Active";
    organizationId: string;
    _id: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    stripeCustomerId: string;
    stripeSubscriptionId: string;
    stripeProductId: string;
    stripePriceId: string;
    usageLimits: {
        credits: number;
        documents: number;
        syncs: number;
    };
    upgrade: {
        productId: string;
        priceId: string;
        botId: string | null;
        sourceIds: string[] | null;
    } | null;
}>;
export declare const updateLatestSubscriptionRequest: z.ZodObject<{
    params: z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodString;
        stripeProductId: z.ZodString;
        stripePriceId: z.ZodString;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
        upgrade: z.ZodNullable<z.ZodObject<{
            productId: z.ZodString;
            priceId: z.ZodString;
            botId: z.ZodNullable<z.ZodString>;
            sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }>>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    };
}, {
    params: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    };
}>;
export declare const updateLatestSubscriptionResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    subscription: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodString;
        stripeProductId: z.ZodString;
        stripePriceId: z.ZodString;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
        upgrade: z.ZodNullable<z.ZodObject<{
            productId: z.ZodString;
            priceId: z.ZodString;
            botId: z.ZodNullable<z.ZodString>;
            sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }>>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}>;
export type UpdateLatestSubscriptionParams = z.infer<typeof updateLatestSubscriptionParams>;
export type UpdateLatestSubscriptionRequest = z.infer<typeof updateLatestSubscriptionRequest>;
export type UpdateLatestSubscriptionResponse = z.infer<typeof updateLatestSubscriptionResponse>;
/** ******************************************************************************
*  Get Latest Subscription
******************************************************************************* */
export declare const latestSubscriptionParams: z.ZodObject<{
    organizationId: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    organizationId?: string | undefined;
}, {
    organizationId?: string | undefined;
}>;
export declare const latestSubscriptionRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        organizationId: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        organizationId?: string | undefined;
    }, {
        organizationId?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        organizationId?: string | undefined;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        organizationId?: string | undefined;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const latestSubscriptionResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    subscription: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodString;
        stripeProductId: z.ZodString;
        stripePriceId: z.ZodString;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
        upgrade: z.ZodNullable<z.ZodObject<{
            productId: z.ZodString;
            priceId: z.ZodString;
            botId: z.ZodNullable<z.ZodString>;
            sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }>>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
}>;
export type LatestSubscriptionParams = z.infer<typeof latestSubscriptionParams>;
export type LatestSubscriptionRequest = z.infer<typeof latestSubscriptionRequest>;
export type LatestSubscriptionResponse = z.infer<typeof latestSubscriptionResponse>;
/** ******************************************************************************
*  Get Subscription
******************************************************************************* */
export declare const getSubscriptionParams: z.ZodObject<{
    subscriptionId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    subscriptionId: string;
}, {
    subscriptionId: string;
}>;
export declare const getSubscriptionRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        subscriptionId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        subscriptionId: string;
    }, {
        subscriptionId: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        subscriptionId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        subscriptionId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const getSubscriptionResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    subscription: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodString;
        stripeProductId: z.ZodString;
        stripePriceId: z.ZodString;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
        upgrade: z.ZodNullable<z.ZodObject<{
            productId: z.ZodString;
            priceId: z.ZodString;
            botId: z.ZodNullable<z.ZodString>;
            sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }>>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }>>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | null | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | null | undefined;
}>;
export type GetSubscriptionParams = z.infer<typeof getSubscriptionParams>;
export type GetSubscriptionRequest = z.infer<typeof getSubscriptionRequest>;
export type GetSubscriptionResponse = z.infer<typeof getSubscriptionResponse>;
/** ******************************************************************************
*  List Subscriptions
******************************************************************************* */
export declare const listSubscriptionsParams: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
export declare const listSubscriptionsRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
}, "strip", z.ZodTypeAny, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const listSubscriptionsResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    subscriptions: z.ZodOptional<z.ZodArray<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodString;
        stripeProductId: z.ZodString;
        stripePriceId: z.ZodString;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
        upgrade: z.ZodNullable<z.ZodObject<{
            productId: z.ZodString;
            priceId: z.ZodString;
            botId: z.ZodNullable<z.ZodString>;
            sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }>>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscriptions?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }[] | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscriptions?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }[] | undefined;
}>;
export type ListSubscriptionsParams = z.infer<typeof listSubscriptionsParams>;
export type ListSubscriptionsRequest = z.infer<typeof listSubscriptionsRequest>;
export type ListSubscriptionsResponse = z.infer<typeof listSubscriptionsResponse>;
/** ******************************************************************************
*  Super Set Subscription Usage Limits
******************************************************************************* */
export declare const superSetSubscriptionUsageLimitsParams: z.ZodObject<{
    usageLimits: z.ZodObject<{
        credits: z.ZodNumber;
        documents: z.ZodNumber;
        syncs: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        credits: number;
        documents: number;
        syncs: number;
    }, {
        credits: number;
        documents: number;
        syncs: number;
    }>;
    resetCurrentUsage: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    usageLimits: {
        credits: number;
        documents: number;
        syncs: number;
    };
    resetCurrentUsage: boolean;
}, {
    usageLimits: {
        credits: number;
        documents: number;
        syncs: number;
    };
    resetCurrentUsage: boolean;
}>;
export declare const superSetSubscriptionUsageLimitsRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        resetCurrentUsage: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        resetCurrentUsage: boolean;
    }, {
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        resetCurrentUsage: boolean;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        resetCurrentUsage: boolean;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        resetCurrentUsage: boolean;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const superSetSubscriptionUsageLimitsResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    subscription: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodString;
        stripeProductId: z.ZodString;
        stripePriceId: z.ZodString;
        status: z.ZodEnum<["Pending", "Active", "Canceled"]>;
        upgrade: z.ZodNullable<z.ZodObject<{
            productId: z.ZodString;
            priceId: z.ZodString;
            botId: z.ZodNullable<z.ZodString>;
            sourceIds: z.ZodNullable<z.ZodArray<z.ZodString, "many">>;
        }, "strip", z.ZodTypeAny, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }, {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        }>>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }, {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    }>>;
    invoice: z.ZodOptional<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        subscriptionId: z.ZodString;
        stripeCustomerId: z.ZodString;
        stripeSubscriptionId: z.ZodNullable<z.ZodString>;
        stripeInvoiceId: z.ZodNullable<z.ZodString>;
        stripeProductId: z.ZodNullable<z.ZodString>;
        stripePriceId: z.ZodNullable<z.ZodString>;
        status: z.ZodEnum<["Pending", "Fulfilled", "Canceled", "Failed"]>;
        usage: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        usageLimits: z.ZodObject<{
            credits: z.ZodNumber;
            documents: z.ZodNumber;
            syncs: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            credits: number;
            documents: number;
            syncs: number;
        }, {
            credits: number;
            documents: number;
            syncs: number;
        }>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }, {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    subscription?: {
        status: "Pending" | "Canceled" | "Active";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        stripeCustomerId: string;
        stripeSubscriptionId: string;
        stripeProductId: string;
        stripePriceId: string;
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
        upgrade: {
            productId: string;
            priceId: string;
            botId: string | null;
            sourceIds: string[] | null;
        } | null;
    } | undefined;
    invoice?: {
        status: "Pending" | "Fulfilled" | "Canceled" | "Failed";
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        subscriptionId: string;
        stripeCustomerId: string;
        stripeSubscriptionId: string | null;
        stripeInvoiceId: string | null;
        stripeProductId: string | null;
        stripePriceId: string | null;
        usage: {
            credits: number;
            documents: number;
            syncs: number;
        };
        usageLimits: {
            credits: number;
            documents: number;
            syncs: number;
        };
    } | undefined;
}>;
export type SuperSetSubscriptionUsageLimitsParams = z.infer<typeof superSetSubscriptionUsageLimitsParams>;
export type SuperSetSubscriptionUsageLimitsRequest = z.infer<typeof superSetSubscriptionUsageLimitsRequest>;
export type SuperSetSubscriptionUsageLimitsResponse = z.infer<typeof superSetSubscriptionUsageLimitsResponse>;
