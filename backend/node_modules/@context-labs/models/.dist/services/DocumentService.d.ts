import z from 'zod';
export declare const zDocumentTypes: z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>;
export declare const documentImportStatus: z.ZodEnum<["Pending", "Running", "Complete", "Failed"]>;
export declare const document: z.ZodObject<{
    _id: z.ZodString;
    organizationId: z.ZodString;
    sourceId: z.ZodString;
    syncId: z.ZodString;
    title: z.ZodString;
    description: z.ZodString;
    releasedAt: z.ZodNumber;
    views: z.ZodOptional<z.ZodNumber>;
    type: z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>;
    url: z.ZodString;
    domain: z.ZodOptional<z.ZodString>;
    lang: z.ZodOptional<z.ZodString>;
    audioFileId: z.ZodString;
    imageFileId: z.ZodString;
    predictionId: z.ZodOptional<z.ZodString>;
    raw: z.ZodNullable<z.ZodString>;
    srt: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        startTime: z.ZodString;
        startSeconds: z.ZodNumber;
        endTime: z.ZodString;
        endSeconds: z.ZodNumber;
        text: z.ZodString;
        pageNumber: z.ZodNullable<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        text: string;
        id: string;
        startTime: string;
        startSeconds: number;
        endTime: string;
        endSeconds: number;
        pageNumber: number | null;
    }, {
        text: string;
        id: string;
        startTime: string;
        startSeconds: number;
        endTime: string;
        endSeconds: number;
        pageNumber: number | null;
    }>, "many">;
    importStatus: z.ZodEnum<["Pending", "Running", "Complete", "Failed"]>;
    archived: z.ZodOptional<z.ZodBoolean>;
    deleted: z.ZodOptional<z.ZodBoolean>;
    meta: z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNumber>;
        createdBy: z.ZodOptional<z.ZodString>;
        lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
        lastUpdatedBy: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    type: "YouTube" | "RSS" | "WebPage" | "File";
    url: string;
    organizationId: string;
    _id: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    sourceId: string;
    syncId: string;
    title: string;
    description: string;
    imageFileId: string;
    releasedAt: number;
    audioFileId: string;
    raw: string | null;
    srt: {
        text: string;
        id: string;
        startTime: string;
        startSeconds: number;
        endTime: string;
        endSeconds: number;
        pageNumber: number | null;
    }[];
    importStatus: "Pending" | "Failed" | "Running" | "Complete";
    views?: number | undefined;
    domain?: string | undefined;
    lang?: string | undefined;
    predictionId?: string | undefined;
    archived?: boolean | undefined;
    deleted?: boolean | undefined;
}, {
    type: "YouTube" | "RSS" | "WebPage" | "File";
    url: string;
    organizationId: string;
    _id: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    sourceId: string;
    syncId: string;
    title: string;
    description: string;
    imageFileId: string;
    releasedAt: number;
    audioFileId: string;
    raw: string | null;
    srt: {
        text: string;
        id: string;
        startTime: string;
        startSeconds: number;
        endTime: string;
        endSeconds: number;
        pageNumber: number | null;
    }[];
    importStatus: "Pending" | "Failed" | "Running" | "Complete";
    views?: number | undefined;
    domain?: string | undefined;
    lang?: string | undefined;
    predictionId?: string | undefined;
    archived?: boolean | undefined;
    deleted?: boolean | undefined;
}>;
export declare const documentSummary: z.ZodObject<Omit<{
    _id: z.ZodString;
    organizationId: z.ZodString;
    sourceId: z.ZodString;
    syncId: z.ZodString;
    title: z.ZodString;
    description: z.ZodString;
    releasedAt: z.ZodNumber;
    views: z.ZodOptional<z.ZodNumber>;
    type: z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>;
    url: z.ZodString;
    domain: z.ZodOptional<z.ZodString>;
    lang: z.ZodOptional<z.ZodString>;
    audioFileId: z.ZodString;
    imageFileId: z.ZodString;
    predictionId: z.ZodOptional<z.ZodString>;
    raw: z.ZodNullable<z.ZodString>;
    srt: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        startTime: z.ZodString;
        startSeconds: z.ZodNumber;
        endTime: z.ZodString;
        endSeconds: z.ZodNumber;
        text: z.ZodString;
        pageNumber: z.ZodNullable<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        text: string;
        id: string;
        startTime: string;
        startSeconds: number;
        endTime: string;
        endSeconds: number;
        pageNumber: number | null;
    }, {
        text: string;
        id: string;
        startTime: string;
        startSeconds: number;
        endTime: string;
        endSeconds: number;
        pageNumber: number | null;
    }>, "many">;
    importStatus: z.ZodEnum<["Pending", "Running", "Complete", "Failed"]>;
    archived: z.ZodOptional<z.ZodBoolean>;
    deleted: z.ZodOptional<z.ZodBoolean>;
    meta: z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodNumber>;
        createdBy: z.ZodOptional<z.ZodString>;
        lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
        lastUpdatedBy: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }, {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    }>;
}, "raw" | "srt">, "strip", z.ZodTypeAny, {
    type: "YouTube" | "RSS" | "WebPage" | "File";
    url: string;
    organizationId: string;
    _id: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    sourceId: string;
    syncId: string;
    title: string;
    description: string;
    imageFileId: string;
    releasedAt: number;
    audioFileId: string;
    importStatus: "Pending" | "Failed" | "Running" | "Complete";
    archived?: boolean | undefined;
    views?: number | undefined;
    domain?: string | undefined;
    lang?: string | undefined;
    predictionId?: string | undefined;
    deleted?: boolean | undefined;
}, {
    type: "YouTube" | "RSS" | "WebPage" | "File";
    url: string;
    organizationId: string;
    _id: string;
    meta: {
        createdAt?: number | undefined;
        createdBy?: string | undefined;
        lastUpdatedAt?: number | undefined;
        lastUpdatedBy?: string | undefined;
    };
    sourceId: string;
    syncId: string;
    title: string;
    description: string;
    imageFileId: string;
    releasedAt: number;
    audioFileId: string;
    importStatus: "Pending" | "Failed" | "Running" | "Complete";
    archived?: boolean | undefined;
    views?: number | undefined;
    domain?: string | undefined;
    lang?: string | undefined;
    predictionId?: string | undefined;
    deleted?: boolean | undefined;
}>;
export type Document = z.infer<typeof document>;
export type DocumentSummary = z.infer<typeof documentSummary>;
export type DocumentTypes = z.infer<typeof zDocumentTypes>;
export type DocumentImportStatus = z.infer<typeof documentImportStatus>;
export interface DocumentService {
    create(request: CreateDocumentRequest): Promise<CreateDocumentResponse>;
    sync(request: SyncDocumentRequest): Promise<SyncDocumentResponse>;
    update(request: UpdateDocumentRequest): Promise<UpdateDocumentResponse>;
    get(request: GetDocumentRequest): Promise<GetDocumentResponse>;
    list(request: ListDocumentsRequest): Promise<ListDocumentsResponse>;
    listAll(request: ListAllDocumentsRequest): Promise<ListAllDocumentsResponse>;
    status(request: DocumentStatusRequest): Promise<DocumentStatusResponse>;
}
/** ******************************************************************************
*  Create Document
******************************************************************************* */
export declare const createDocumentParams: z.ZodObject<{
    organizationId: z.ZodString;
    sourceId: z.ZodString;
    syncId: z.ZodString;
    imageFileId: z.ZodString;
    type: z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>;
    url: z.ZodString;
    domain: z.ZodOptional<z.ZodString>;
    lang: z.ZodOptional<z.ZodString>;
    raw: z.ZodOptional<z.ZodString>;
    title: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "YouTube" | "RSS" | "WebPage" | "File";
    url: string;
    organizationId: string;
    sourceId: string;
    syncId: string;
    imageFileId: string;
    domain?: string | undefined;
    lang?: string | undefined;
    raw?: string | undefined;
    title?: string | undefined;
}, {
    type: "YouTube" | "RSS" | "WebPage" | "File";
    url: string;
    organizationId: string;
    sourceId: string;
    syncId: string;
    imageFileId: string;
    domain?: string | undefined;
    lang?: string | undefined;
    raw?: string | undefined;
    title?: string | undefined;
}>;
export declare const createDocumentRequest: z.ZodObject<{
    params: z.ZodObject<{
        organizationId: z.ZodString;
        sourceId: z.ZodString;
        syncId: z.ZodString;
        imageFileId: z.ZodString;
        type: z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>;
        url: z.ZodString;
        domain: z.ZodOptional<z.ZodString>;
        lang: z.ZodOptional<z.ZodString>;
        raw: z.ZodOptional<z.ZodString>;
        title: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        sourceId: string;
        syncId: string;
        imageFileId: string;
        domain?: string | undefined;
        lang?: string | undefined;
        raw?: string | undefined;
        title?: string | undefined;
    }, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        sourceId: string;
        syncId: string;
        imageFileId: string;
        domain?: string | undefined;
        lang?: string | undefined;
        raw?: string | undefined;
        title?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        sourceId: string;
        syncId: string;
        imageFileId: string;
        domain?: string | undefined;
        lang?: string | undefined;
        raw?: string | undefined;
        title?: string | undefined;
    };
}, {
    params: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        sourceId: string;
        syncId: string;
        imageFileId: string;
        domain?: string | undefined;
        lang?: string | undefined;
        raw?: string | undefined;
        title?: string | undefined;
    };
}>;
export declare const createDocumentResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    document: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        sourceId: z.ZodString;
        syncId: z.ZodString;
        title: z.ZodString;
        description: z.ZodString;
        releasedAt: z.ZodNumber;
        views: z.ZodOptional<z.ZodNumber>;
        type: z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>;
        url: z.ZodString;
        domain: z.ZodOptional<z.ZodString>;
        lang: z.ZodOptional<z.ZodString>;
        audioFileId: z.ZodString;
        imageFileId: z.ZodString;
        predictionId: z.ZodOptional<z.ZodString>;
        raw: z.ZodNullable<z.ZodString>;
        srt: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            startTime: z.ZodString;
            startSeconds: z.ZodNumber;
            endTime: z.ZodString;
            endSeconds: z.ZodNumber;
            text: z.ZodString;
            pageNumber: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }>, "many">;
        importStatus: z.ZodEnum<["Pending", "Running", "Complete", "Failed"]>;
        archived: z.ZodOptional<z.ZodBoolean>;
        deleted: z.ZodOptional<z.ZodBoolean>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    }, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    document?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    } | null | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    document?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    } | null | undefined;
}>;
export type CreateDocumentParams = z.infer<typeof createDocumentParams>;
export type CreateDocumentRequest = z.infer<typeof createDocumentRequest>;
export type CreateDocumentResponse = z.infer<typeof createDocumentResponse>;
/** ******************************************************************************
*  Sync Document
******************************************************************************* */
export declare const syncDocumentParams: z.ZodObject<{
    _id: z.ZodString;
    syncId: z.ZodString;
    deleted: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    _id: string;
    syncId: string;
    deleted?: boolean | undefined;
}, {
    _id: string;
    syncId: string;
    deleted?: boolean | undefined;
}>;
export declare const syncDocumentRequest: z.ZodObject<{
    params: z.ZodObject<{
        _id: z.ZodString;
        syncId: z.ZodString;
        deleted: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        _id: string;
        syncId: string;
        deleted?: boolean | undefined;
    }, {
        _id: string;
        syncId: string;
        deleted?: boolean | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        _id: string;
        syncId: string;
        deleted?: boolean | undefined;
    };
}, {
    params: {
        _id: string;
        syncId: string;
        deleted?: boolean | undefined;
    };
}>;
export declare const syncDocumentResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    document: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        sourceId: z.ZodString;
        syncId: z.ZodString;
        title: z.ZodString;
        description: z.ZodString;
        releasedAt: z.ZodNumber;
        views: z.ZodOptional<z.ZodNumber>;
        type: z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>;
        url: z.ZodString;
        domain: z.ZodOptional<z.ZodString>;
        lang: z.ZodOptional<z.ZodString>;
        audioFileId: z.ZodString;
        imageFileId: z.ZodString;
        predictionId: z.ZodOptional<z.ZodString>;
        raw: z.ZodNullable<z.ZodString>;
        srt: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            startTime: z.ZodString;
            startSeconds: z.ZodNumber;
            endTime: z.ZodString;
            endSeconds: z.ZodNumber;
            text: z.ZodString;
            pageNumber: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }>, "many">;
        importStatus: z.ZodEnum<["Pending", "Running", "Complete", "Failed"]>;
        archived: z.ZodOptional<z.ZodBoolean>;
        deleted: z.ZodOptional<z.ZodBoolean>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    }, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    document?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    } | null | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    document?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    } | null | undefined;
}>;
export type SyncDocumentParams = z.infer<typeof syncDocumentParams>;
export type SyncDocumentRequest = z.infer<typeof syncDocumentRequest>;
export type SyncDocumentResponse = z.infer<typeof syncDocumentResponse>;
/** ******************************************************************************
*  Update Document
******************************************************************************* */
export declare const updateDocumentParams: z.ZodObject<{
    document: z.ZodObject<{
        _id: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        sourceId: z.ZodOptional<z.ZodString>;
        syncId: z.ZodOptional<z.ZodString>;
        title: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        releasedAt: z.ZodOptional<z.ZodNumber>;
        views: z.ZodOptional<z.ZodNumber>;
        type: z.ZodOptional<z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>>;
        url: z.ZodOptional<z.ZodString>;
        domain: z.ZodOptional<z.ZodString>;
        lang: z.ZodOptional<z.ZodString>;
        audioFileId: z.ZodOptional<z.ZodString>;
        imageFileId: z.ZodOptional<z.ZodString>;
        predictionId: z.ZodOptional<z.ZodString>;
        raw: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        srt: z.ZodOptional<z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            startTime: z.ZodString;
            startSeconds: z.ZodNumber;
            endTime: z.ZodString;
            endSeconds: z.ZodNumber;
            text: z.ZodString;
            pageNumber: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }>, "many">>;
        importStatus: z.ZodOptional<z.ZodEnum<["Pending", "Running", "Complete", "Failed"]>>;
        archived: z.ZodOptional<z.ZodBoolean>;
        deleted: z.ZodOptional<z.ZodBoolean>;
        meta: z.ZodOptional<z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>>;
    }, "strip", z.ZodTypeAny, {
        _id?: string | undefined;
        organizationId?: string | undefined;
        sourceId?: string | undefined;
        syncId?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        releasedAt?: number | undefined;
        views?: number | undefined;
        type?: "YouTube" | "RSS" | "WebPage" | "File" | undefined;
        url?: string | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        audioFileId?: string | undefined;
        imageFileId?: string | undefined;
        predictionId?: string | undefined;
        raw?: string | null | undefined;
        srt?: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[] | undefined;
        importStatus?: "Pending" | "Failed" | "Running" | "Complete" | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
        meta?: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        } | undefined;
    }, {
        _id?: string | undefined;
        organizationId?: string | undefined;
        sourceId?: string | undefined;
        syncId?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        releasedAt?: number | undefined;
        views?: number | undefined;
        type?: "YouTube" | "RSS" | "WebPage" | "File" | undefined;
        url?: string | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        audioFileId?: string | undefined;
        imageFileId?: string | undefined;
        predictionId?: string | undefined;
        raw?: string | null | undefined;
        srt?: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[] | undefined;
        importStatus?: "Pending" | "Failed" | "Running" | "Complete" | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
        meta?: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        } | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    document: {
        _id?: string | undefined;
        organizationId?: string | undefined;
        sourceId?: string | undefined;
        syncId?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        releasedAt?: number | undefined;
        views?: number | undefined;
        type?: "YouTube" | "RSS" | "WebPage" | "File" | undefined;
        url?: string | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        audioFileId?: string | undefined;
        imageFileId?: string | undefined;
        predictionId?: string | undefined;
        raw?: string | null | undefined;
        srt?: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[] | undefined;
        importStatus?: "Pending" | "Failed" | "Running" | "Complete" | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
        meta?: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        } | undefined;
    };
}, {
    document: {
        _id?: string | undefined;
        organizationId?: string | undefined;
        sourceId?: string | undefined;
        syncId?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        releasedAt?: number | undefined;
        views?: number | undefined;
        type?: "YouTube" | "RSS" | "WebPage" | "File" | undefined;
        url?: string | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        audioFileId?: string | undefined;
        imageFileId?: string | undefined;
        predictionId?: string | undefined;
        raw?: string | null | undefined;
        srt?: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[] | undefined;
        importStatus?: "Pending" | "Failed" | "Running" | "Complete" | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
        meta?: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        } | undefined;
    };
}>;
export declare const updateDocumentRequest: z.ZodObject<{
    params: z.ZodObject<{
        document: z.ZodObject<{
            _id: z.ZodOptional<z.ZodString>;
            organizationId: z.ZodOptional<z.ZodString>;
            sourceId: z.ZodOptional<z.ZodString>;
            syncId: z.ZodOptional<z.ZodString>;
            title: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            releasedAt: z.ZodOptional<z.ZodNumber>;
            views: z.ZodOptional<z.ZodNumber>;
            type: z.ZodOptional<z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>>;
            url: z.ZodOptional<z.ZodString>;
            domain: z.ZodOptional<z.ZodString>;
            lang: z.ZodOptional<z.ZodString>;
            audioFileId: z.ZodOptional<z.ZodString>;
            imageFileId: z.ZodOptional<z.ZodString>;
            predictionId: z.ZodOptional<z.ZodString>;
            raw: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            srt: z.ZodOptional<z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                startTime: z.ZodString;
                startSeconds: z.ZodNumber;
                endTime: z.ZodString;
                endSeconds: z.ZodNumber;
                text: z.ZodString;
                pageNumber: z.ZodNullable<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                text: string;
                id: string;
                startTime: string;
                startSeconds: number;
                endTime: string;
                endSeconds: number;
                pageNumber: number | null;
            }, {
                text: string;
                id: string;
                startTime: string;
                startSeconds: number;
                endTime: string;
                endSeconds: number;
                pageNumber: number | null;
            }>, "many">>;
            importStatus: z.ZodOptional<z.ZodEnum<["Pending", "Running", "Complete", "Failed"]>>;
            archived: z.ZodOptional<z.ZodBoolean>;
            deleted: z.ZodOptional<z.ZodBoolean>;
            meta: z.ZodOptional<z.ZodObject<{
                createdAt: z.ZodOptional<z.ZodNumber>;
                createdBy: z.ZodOptional<z.ZodString>;
                lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
                lastUpdatedBy: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            }, {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            }>>;
        }, "strip", z.ZodTypeAny, {
            _id?: string | undefined;
            organizationId?: string | undefined;
            sourceId?: string | undefined;
            syncId?: string | undefined;
            title?: string | undefined;
            description?: string | undefined;
            releasedAt?: number | undefined;
            views?: number | undefined;
            type?: "YouTube" | "RSS" | "WebPage" | "File" | undefined;
            url?: string | undefined;
            domain?: string | undefined;
            lang?: string | undefined;
            audioFileId?: string | undefined;
            imageFileId?: string | undefined;
            predictionId?: string | undefined;
            raw?: string | null | undefined;
            srt?: {
                text: string;
                id: string;
                startTime: string;
                startSeconds: number;
                endTime: string;
                endSeconds: number;
                pageNumber: number | null;
            }[] | undefined;
            importStatus?: "Pending" | "Failed" | "Running" | "Complete" | undefined;
            archived?: boolean | undefined;
            deleted?: boolean | undefined;
            meta?: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            } | undefined;
        }, {
            _id?: string | undefined;
            organizationId?: string | undefined;
            sourceId?: string | undefined;
            syncId?: string | undefined;
            title?: string | undefined;
            description?: string | undefined;
            releasedAt?: number | undefined;
            views?: number | undefined;
            type?: "YouTube" | "RSS" | "WebPage" | "File" | undefined;
            url?: string | undefined;
            domain?: string | undefined;
            lang?: string | undefined;
            audioFileId?: string | undefined;
            imageFileId?: string | undefined;
            predictionId?: string | undefined;
            raw?: string | null | undefined;
            srt?: {
                text: string;
                id: string;
                startTime: string;
                startSeconds: number;
                endTime: string;
                endSeconds: number;
                pageNumber: number | null;
            }[] | undefined;
            importStatus?: "Pending" | "Failed" | "Running" | "Complete" | undefined;
            archived?: boolean | undefined;
            deleted?: boolean | undefined;
            meta?: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            } | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        document: {
            _id?: string | undefined;
            organizationId?: string | undefined;
            sourceId?: string | undefined;
            syncId?: string | undefined;
            title?: string | undefined;
            description?: string | undefined;
            releasedAt?: number | undefined;
            views?: number | undefined;
            type?: "YouTube" | "RSS" | "WebPage" | "File" | undefined;
            url?: string | undefined;
            domain?: string | undefined;
            lang?: string | undefined;
            audioFileId?: string | undefined;
            imageFileId?: string | undefined;
            predictionId?: string | undefined;
            raw?: string | null | undefined;
            srt?: {
                text: string;
                id: string;
                startTime: string;
                startSeconds: number;
                endTime: string;
                endSeconds: number;
                pageNumber: number | null;
            }[] | undefined;
            importStatus?: "Pending" | "Failed" | "Running" | "Complete" | undefined;
            archived?: boolean | undefined;
            deleted?: boolean | undefined;
            meta?: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            } | undefined;
        };
    }, {
        document: {
            _id?: string | undefined;
            organizationId?: string | undefined;
            sourceId?: string | undefined;
            syncId?: string | undefined;
            title?: string | undefined;
            description?: string | undefined;
            releasedAt?: number | undefined;
            views?: number | undefined;
            type?: "YouTube" | "RSS" | "WebPage" | "File" | undefined;
            url?: string | undefined;
            domain?: string | undefined;
            lang?: string | undefined;
            audioFileId?: string | undefined;
            imageFileId?: string | undefined;
            predictionId?: string | undefined;
            raw?: string | null | undefined;
            srt?: {
                text: string;
                id: string;
                startTime: string;
                startSeconds: number;
                endTime: string;
                endSeconds: number;
                pageNumber: number | null;
            }[] | undefined;
            importStatus?: "Pending" | "Failed" | "Running" | "Complete" | undefined;
            archived?: boolean | undefined;
            deleted?: boolean | undefined;
            meta?: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            } | undefined;
        };
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        document: {
            _id?: string | undefined;
            organizationId?: string | undefined;
            sourceId?: string | undefined;
            syncId?: string | undefined;
            title?: string | undefined;
            description?: string | undefined;
            releasedAt?: number | undefined;
            views?: number | undefined;
            type?: "YouTube" | "RSS" | "WebPage" | "File" | undefined;
            url?: string | undefined;
            domain?: string | undefined;
            lang?: string | undefined;
            audioFileId?: string | undefined;
            imageFileId?: string | undefined;
            predictionId?: string | undefined;
            raw?: string | null | undefined;
            srt?: {
                text: string;
                id: string;
                startTime: string;
                startSeconds: number;
                endTime: string;
                endSeconds: number;
                pageNumber: number | null;
            }[] | undefined;
            importStatus?: "Pending" | "Failed" | "Running" | "Complete" | undefined;
            archived?: boolean | undefined;
            deleted?: boolean | undefined;
            meta?: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            } | undefined;
        };
    };
}, {
    params: {
        document: {
            _id?: string | undefined;
            organizationId?: string | undefined;
            sourceId?: string | undefined;
            syncId?: string | undefined;
            title?: string | undefined;
            description?: string | undefined;
            releasedAt?: number | undefined;
            views?: number | undefined;
            type?: "YouTube" | "RSS" | "WebPage" | "File" | undefined;
            url?: string | undefined;
            domain?: string | undefined;
            lang?: string | undefined;
            audioFileId?: string | undefined;
            imageFileId?: string | undefined;
            predictionId?: string | undefined;
            raw?: string | null | undefined;
            srt?: {
                text: string;
                id: string;
                startTime: string;
                startSeconds: number;
                endTime: string;
                endSeconds: number;
                pageNumber: number | null;
            }[] | undefined;
            importStatus?: "Pending" | "Failed" | "Running" | "Complete" | undefined;
            archived?: boolean | undefined;
            deleted?: boolean | undefined;
            meta?: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            } | undefined;
        };
    };
}>;
export declare const updateDocumentResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    document: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        sourceId: z.ZodString;
        syncId: z.ZodString;
        title: z.ZodString;
        description: z.ZodString;
        releasedAt: z.ZodNumber;
        views: z.ZodOptional<z.ZodNumber>;
        type: z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>;
        url: z.ZodString;
        domain: z.ZodOptional<z.ZodString>;
        lang: z.ZodOptional<z.ZodString>;
        audioFileId: z.ZodString;
        imageFileId: z.ZodString;
        predictionId: z.ZodOptional<z.ZodString>;
        raw: z.ZodNullable<z.ZodString>;
        srt: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            startTime: z.ZodString;
            startSeconds: z.ZodNumber;
            endTime: z.ZodString;
            endSeconds: z.ZodNumber;
            text: z.ZodString;
            pageNumber: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }>, "many">;
        importStatus: z.ZodEnum<["Pending", "Running", "Complete", "Failed"]>;
        archived: z.ZodOptional<z.ZodBoolean>;
        deleted: z.ZodOptional<z.ZodBoolean>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    }, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    document?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    } | null | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    document?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    } | null | undefined;
}>;
export type UpdateDocumentParams = z.infer<typeof updateDocumentParams>;
export type UpdateDocumentRequest = z.infer<typeof updateDocumentRequest>;
export type UpdateDocumentResponse = z.infer<typeof updateDocumentResponse>;
/** ******************************************************************************
*  Get Document
******************************************************************************* */
export declare const getDocumentParams: z.ZodObject<{
    documentId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    documentId: string;
}, {
    documentId: string;
}>;
export declare const getDocumentRequest: z.ZodObject<{
    params: z.ZodObject<{
        documentId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        documentId: string;
    }, {
        documentId: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        documentId: string;
    };
}, {
    params: {
        documentId: string;
    };
}>;
export declare const getDocumentResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    document: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        sourceId: z.ZodString;
        syncId: z.ZodString;
        title: z.ZodString;
        description: z.ZodString;
        releasedAt: z.ZodNumber;
        views: z.ZodOptional<z.ZodNumber>;
        type: z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>;
        url: z.ZodString;
        domain: z.ZodOptional<z.ZodString>;
        lang: z.ZodOptional<z.ZodString>;
        audioFileId: z.ZodString;
        imageFileId: z.ZodString;
        predictionId: z.ZodOptional<z.ZodString>;
        raw: z.ZodNullable<z.ZodString>;
        srt: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            startTime: z.ZodString;
            startSeconds: z.ZodNumber;
            endTime: z.ZodString;
            endSeconds: z.ZodNumber;
            text: z.ZodString;
            pageNumber: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }>, "many">;
        importStatus: z.ZodEnum<["Pending", "Running", "Complete", "Failed"]>;
        archived: z.ZodOptional<z.ZodBoolean>;
        deleted: z.ZodOptional<z.ZodBoolean>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    }, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    document?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    } | null | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    document?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        raw: string | null;
        srt: {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }[];
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        archived?: boolean | undefined;
        deleted?: boolean | undefined;
    } | null | undefined;
}>;
export type GetDocumentParams = z.infer<typeof getDocumentParams>;
export type GetDocumentRequest = z.infer<typeof getDocumentRequest>;
export type GetDocumentResponse = z.infer<typeof getDocumentResponse>;
/** ******************************************************************************
*  List Documents
******************************************************************************* */
export declare const listDocumentsParams: z.ZodObject<{
    sourceId: z.ZodString;
    search: z.ZodOptional<z.ZodString>;
    offset: z.ZodOptional<z.ZodNumber>;
    pageSize: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    sourceId: string;
    search?: string | undefined;
    offset?: number | undefined;
    pageSize?: number | undefined;
}, {
    sourceId: string;
    search?: string | undefined;
    offset?: number | undefined;
    pageSize?: number | undefined;
}>;
export declare const listDocumentsRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        sourceId: z.ZodString;
        search: z.ZodOptional<z.ZodString>;
        offset: z.ZodOptional<z.ZodNumber>;
        pageSize: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        sourceId: string;
        search?: string | undefined;
        offset?: number | undefined;
        pageSize?: number | undefined;
    }, {
        sourceId: string;
        search?: string | undefined;
        offset?: number | undefined;
        pageSize?: number | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        sourceId: string;
        search?: string | undefined;
        offset?: number | undefined;
        pageSize?: number | undefined;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        sourceId: string;
        search?: string | undefined;
        offset?: number | undefined;
        pageSize?: number | undefined;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const listDocumentsResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    documents: z.ZodOptional<z.ZodArray<z.ZodObject<Omit<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        sourceId: z.ZodString;
        syncId: z.ZodString;
        title: z.ZodString;
        description: z.ZodString;
        releasedAt: z.ZodNumber;
        views: z.ZodOptional<z.ZodNumber>;
        type: z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>;
        url: z.ZodString;
        domain: z.ZodOptional<z.ZodString>;
        lang: z.ZodOptional<z.ZodString>;
        audioFileId: z.ZodString;
        imageFileId: z.ZodString;
        predictionId: z.ZodOptional<z.ZodString>;
        raw: z.ZodNullable<z.ZodString>;
        srt: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            startTime: z.ZodString;
            startSeconds: z.ZodNumber;
            endTime: z.ZodString;
            endSeconds: z.ZodNumber;
            text: z.ZodString;
            pageNumber: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }>, "many">;
        importStatus: z.ZodEnum<["Pending", "Running", "Complete", "Failed"]>;
        archived: z.ZodOptional<z.ZodBoolean>;
        deleted: z.ZodOptional<z.ZodBoolean>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "raw" | "srt">, "strip", z.ZodTypeAny, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        archived?: boolean | undefined;
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        deleted?: boolean | undefined;
    }, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        archived?: boolean | undefined;
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        deleted?: boolean | undefined;
    }>, "many">>;
    total: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    documents?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        archived?: boolean | undefined;
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        deleted?: boolean | undefined;
    }[] | undefined;
    total?: number | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    documents?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        archived?: boolean | undefined;
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        deleted?: boolean | undefined;
    }[] | undefined;
    total?: number | undefined;
}>;
export type ListDocumentsParams = z.infer<typeof listDocumentsParams>;
export type ListDocumentsRequest = z.infer<typeof listDocumentsRequest>;
export type ListDocumentsResponse = z.infer<typeof listDocumentsResponse>;
/** ******************************************************************************
*  List All Documents
******************************************************************************* */
export declare const listAllDocumentsParams: z.ZodObject<{
    sourceId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    sourceId: string;
}, {
    sourceId: string;
}>;
export declare const listAllDocumentsRequest: z.ZodObject<{
    params: z.ZodObject<{
        sourceId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        sourceId: string;
    }, {
        sourceId: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        sourceId: string;
    };
}, {
    params: {
        sourceId: string;
    };
}>;
export declare const listAllDocumentsResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    documents: z.ZodOptional<z.ZodArray<z.ZodObject<Omit<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        sourceId: z.ZodString;
        syncId: z.ZodString;
        title: z.ZodString;
        description: z.ZodString;
        releasedAt: z.ZodNumber;
        views: z.ZodOptional<z.ZodNumber>;
        type: z.ZodEnum<["YouTube", "RSS", "WebPage", "File"]>;
        url: z.ZodString;
        domain: z.ZodOptional<z.ZodString>;
        lang: z.ZodOptional<z.ZodString>;
        audioFileId: z.ZodString;
        imageFileId: z.ZodString;
        predictionId: z.ZodOptional<z.ZodString>;
        raw: z.ZodNullable<z.ZodString>;
        srt: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            startTime: z.ZodString;
            startSeconds: z.ZodNumber;
            endTime: z.ZodString;
            endSeconds: z.ZodNumber;
            text: z.ZodString;
            pageNumber: z.ZodNullable<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }, {
            text: string;
            id: string;
            startTime: string;
            startSeconds: number;
            endTime: string;
            endSeconds: number;
            pageNumber: number | null;
        }>, "many">;
        importStatus: z.ZodEnum<["Pending", "Running", "Complete", "Failed"]>;
        archived: z.ZodOptional<z.ZodBoolean>;
        deleted: z.ZodOptional<z.ZodBoolean>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "raw" | "srt">, "strip", z.ZodTypeAny, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        archived?: boolean | undefined;
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        deleted?: boolean | undefined;
    }, {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        archived?: boolean | undefined;
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        deleted?: boolean | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    documents?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        archived?: boolean | undefined;
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        deleted?: boolean | undefined;
    }[] | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    documents?: {
        type: "YouTube" | "RSS" | "WebPage" | "File";
        url: string;
        organizationId: string;
        _id: string;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        sourceId: string;
        syncId: string;
        title: string;
        description: string;
        imageFileId: string;
        releasedAt: number;
        audioFileId: string;
        importStatus: "Pending" | "Failed" | "Running" | "Complete";
        archived?: boolean | undefined;
        views?: number | undefined;
        domain?: string | undefined;
        lang?: string | undefined;
        predictionId?: string | undefined;
        deleted?: boolean | undefined;
    }[] | undefined;
}>;
export type ListAllDocumentsParams = z.infer<typeof listAllDocumentsParams>;
export type ListAllDocumentsRequest = z.infer<typeof listAllDocumentsRequest>;
export type ListAllDocumentsResponse = z.infer<typeof listAllDocumentsResponse>;
/** ******************************************************************************
*  Document Status
******************************************************************************* */
export declare const documentStatusParams: z.ZodObject<{
    sourceId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    sourceId: string;
}, {
    sourceId: string;
}>;
export declare const documentStatusRequest: z.ZodObject<{
    params: z.ZodObject<{
        sourceId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        sourceId: string;
    }, {
        sourceId: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        sourceId: string;
    };
}, {
    params: {
        sourceId: string;
    };
}>;
export declare const documentStatusResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    statuses: z.ZodOptional<z.ZodObject<{
        Pending: z.ZodNumber;
        Processing: z.ZodNumber;
        Complete: z.ZodNumber;
        Failed: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        Pending: number;
        Failed: number;
        Complete: number;
        Processing: number;
    }, {
        Pending: number;
        Failed: number;
        Complete: number;
        Processing: number;
    }>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    statuses?: {
        Pending: number;
        Failed: number;
        Complete: number;
        Processing: number;
    } | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    statuses?: {
        Pending: number;
        Failed: number;
        Complete: number;
        Processing: number;
    } | undefined;
}>;
export type DocumentStatusParams = z.infer<typeof documentStatusParams>;
export type DocumentStatusRequest = z.infer<typeof documentStatusRequest>;
export type DocumentStatusResponse = z.infer<typeof documentStatusResponse>;
