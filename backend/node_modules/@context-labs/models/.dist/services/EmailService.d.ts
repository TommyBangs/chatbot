import z from 'zod';
export interface EmailService {
    sendSourceCreated(request: SendSourceCreatedEmailRequest): Promise<SendSourceCreatedEmailResponse>;
    sendSourceImported(request: SendSourceImportedEmailRequest): Promise<SendSourceImportedEmailResponse>;
    sendInviteToOrganization(request: SendInviteToOrganizationEmailRequest): Promise<SendInviteToOrganizationEmailResponse>;
}
/** ******************************************************************************
*  Send Source Created Email
******************************************************************************* */
export declare const sendSourceCreatedEmailParams: z.ZodObject<{
    toAddress: z.ZodString;
    source: z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        syncId: z.ZodOptional<z.ZodString>; /** ******************************************************************************
        *  Send Source Created Email
        ******************************************************************************* */
        title: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        imageFileId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        type: z.ZodEnum<["YouTube", "RSS", "SiteMap", "Files", "WARC"]>;
        importUrl: z.ZodOptional<z.ZodString>;
        transcribe: z.ZodOptional<z.ZodBoolean>;
        regex: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        durationSeconds: z.ZodOptional<z.ZodNumber>;
        documentCount: z.ZodNumber;
        archived: z.ZodOptional<z.ZodBoolean>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
        _id: string;
        organizationId: string;
        title: string;
        documentCount: number;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        syncId?: string | undefined;
        description?: string | undefined;
        imageFileId?: string | null | undefined;
        importUrl?: string | undefined;
        transcribe?: boolean | undefined;
        regex?: string | null | undefined;
        durationSeconds?: number | undefined;
        archived?: boolean | undefined;
    }, {
        type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
        _id: string;
        organizationId: string;
        title: string;
        documentCount: number;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        syncId?: string | undefined;
        description?: string | undefined;
        imageFileId?: string | null | undefined;
        importUrl?: string | undefined;
        transcribe?: boolean | undefined;
        regex?: string | null | undefined;
        durationSeconds?: number | undefined;
        archived?: boolean | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    source: {
        type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
        _id: string;
        organizationId: string;
        title: string;
        documentCount: number;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        syncId?: string | undefined;
        description?: string | undefined;
        imageFileId?: string | null | undefined;
        importUrl?: string | undefined;
        transcribe?: boolean | undefined;
        regex?: string | null | undefined;
        durationSeconds?: number | undefined;
        archived?: boolean | undefined;
    };
    toAddress: string;
}, {
    source: {
        type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
        _id: string;
        organizationId: string;
        title: string;
        documentCount: number;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        syncId?: string | undefined;
        description?: string | undefined;
        imageFileId?: string | null | undefined;
        importUrl?: string | undefined;
        transcribe?: boolean | undefined;
        regex?: string | null | undefined;
        durationSeconds?: number | undefined;
        archived?: boolean | undefined;
    };
    toAddress: string;
}>;
export declare const sendSourceCreatedEmailRequest: z.ZodObject<{
    params: z.ZodObject<{
        toAddress: z.ZodString;
        source: z.ZodObject<{
            _id: z.ZodString;
            organizationId: z.ZodString;
            syncId: z.ZodOptional<z.ZodString>; /** ******************************************************************************
            *  Send Source Created Email
            ******************************************************************************* */
            title: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            imageFileId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            type: z.ZodEnum<["YouTube", "RSS", "SiteMap", "Files", "WARC"]>;
            importUrl: z.ZodOptional<z.ZodString>;
            transcribe: z.ZodOptional<z.ZodBoolean>;
            regex: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            durationSeconds: z.ZodOptional<z.ZodNumber>;
            documentCount: z.ZodNumber;
            archived: z.ZodOptional<z.ZodBoolean>;
            meta: z.ZodObject<{
                createdAt: z.ZodOptional<z.ZodNumber>;
                createdBy: z.ZodOptional<z.ZodString>;
                lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
                lastUpdatedBy: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            }, {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        }, {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        source: {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        };
        toAddress: string;
    }, {
        source: {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        };
        toAddress: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        source: {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        };
        toAddress: string;
    };
}, {
    params: {
        source: {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        };
        toAddress: string;
    };
}>;
export declare const sendSourceCreatedEmailResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    success: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    success?: boolean | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    success?: boolean | undefined;
}>;
export type SendSourceCreatedEmailParams = z.infer<typeof sendSourceCreatedEmailParams>;
export type SendSourceCreatedEmailRequest = z.infer<typeof sendSourceCreatedEmailRequest>;
export type SendSourceCreatedEmailResponse = z.infer<typeof sendSourceCreatedEmailResponse>;
/** ******************************************************************************
*  Send Source Imported Email
******************************************************************************* */
export declare const sendSourceImportedEmailParams: z.ZodObject<{
    toAddress: z.ZodString;
    source: z.ZodObject<{
        _id: z.ZodString;
        organizationId: z.ZodString;
        syncId: z.ZodOptional<z.ZodString>; /** ******************************************************************************
        *  Send Source Created Email
        ******************************************************************************* */
        title: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        imageFileId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        type: z.ZodEnum<["YouTube", "RSS", "SiteMap", "Files", "WARC"]>;
        importUrl: z.ZodOptional<z.ZodString>;
        transcribe: z.ZodOptional<z.ZodBoolean>;
        regex: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        durationSeconds: z.ZodOptional<z.ZodNumber>;
        documentCount: z.ZodNumber;
        archived: z.ZodOptional<z.ZodBoolean>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
        _id: string;
        organizationId: string;
        title: string;
        documentCount: number;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        syncId?: string | undefined;
        description?: string | undefined;
        imageFileId?: string | null | undefined;
        importUrl?: string | undefined;
        transcribe?: boolean | undefined;
        regex?: string | null | undefined;
        durationSeconds?: number | undefined;
        archived?: boolean | undefined;
    }, {
        type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
        _id: string;
        organizationId: string;
        title: string;
        documentCount: number;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        syncId?: string | undefined;
        description?: string | undefined;
        imageFileId?: string | null | undefined;
        importUrl?: string | undefined;
        transcribe?: boolean | undefined;
        regex?: string | null | undefined;
        durationSeconds?: number | undefined;
        archived?: boolean | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    source: {
        type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
        _id: string;
        organizationId: string;
        title: string;
        documentCount: number;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        syncId?: string | undefined;
        description?: string | undefined;
        imageFileId?: string | null | undefined;
        importUrl?: string | undefined;
        transcribe?: boolean | undefined;
        regex?: string | null | undefined;
        durationSeconds?: number | undefined;
        archived?: boolean | undefined;
    };
    toAddress: string;
}, {
    source: {
        type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
        _id: string;
        organizationId: string;
        title: string;
        documentCount: number;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        syncId?: string | undefined;
        description?: string | undefined;
        imageFileId?: string | null | undefined;
        importUrl?: string | undefined;
        transcribe?: boolean | undefined;
        regex?: string | null | undefined;
        durationSeconds?: number | undefined;
        archived?: boolean | undefined;
    };
    toAddress: string;
}>;
export declare const sendSourceImportedEmailRequest: z.ZodObject<{
    params: z.ZodObject<{
        toAddress: z.ZodString;
        source: z.ZodObject<{
            _id: z.ZodString;
            organizationId: z.ZodString;
            syncId: z.ZodOptional<z.ZodString>; /** ******************************************************************************
            *  Send Source Created Email
            ******************************************************************************* */
            title: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            imageFileId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            type: z.ZodEnum<["YouTube", "RSS", "SiteMap", "Files", "WARC"]>;
            importUrl: z.ZodOptional<z.ZodString>;
            transcribe: z.ZodOptional<z.ZodBoolean>;
            regex: z.ZodOptional<z.ZodNullable<z.ZodString>>;
            durationSeconds: z.ZodOptional<z.ZodNumber>;
            documentCount: z.ZodNumber;
            archived: z.ZodOptional<z.ZodBoolean>;
            meta: z.ZodObject<{
                createdAt: z.ZodOptional<z.ZodNumber>;
                createdBy: z.ZodOptional<z.ZodString>;
                lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
                lastUpdatedBy: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            }, {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        }, {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        source: {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        };
        toAddress: string;
    }, {
        source: {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        };
        toAddress: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        source: {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        };
        toAddress: string;
    };
}, {
    params: {
        source: {
            type: "YouTube" | "RSS" | "SiteMap" | "Files" | "WARC";
            _id: string;
            organizationId: string;
            title: string;
            documentCount: number;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            syncId?: string | undefined;
            description?: string | undefined;
            imageFileId?: string | null | undefined;
            importUrl?: string | undefined;
            transcribe?: boolean | undefined;
            regex?: string | null | undefined;
            durationSeconds?: number | undefined;
            archived?: boolean | undefined;
        };
        toAddress: string;
    };
}>;
export declare const sendSourceImportedEmailResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    success: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    success?: boolean | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    success?: boolean | undefined;
}>;
export type SendSourceImportedEmailParams = z.infer<typeof sendSourceImportedEmailParams>;
export type SendSourceImportedEmailRequest = z.infer<typeof sendSourceImportedEmailRequest>;
export type SendSourceImportedEmailResponse = z.infer<typeof sendSourceImportedEmailResponse>;
/** ******************************************************************************
*  Send Invite  to Organization
******************************************************************************* */
export declare const sendInviteToOrganizationEmailParams: z.ZodObject<{
    toAddress: z.ZodString;
    inviteeExists: z.ZodBoolean;
    inviterFirstName: z.ZodString;
    inviterLastName: z.ZodString;
    organization: z.ZodObject<{
        _id: z.ZodString;
        stripeCustomerId: z.ZodString;
        userId: z.ZodString;
        name: z.ZodString;
        imageFileId: z.ZodNullable<z.ZodString>;
        description: z.ZodNullable<z.ZodString>;
        meta: z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodNumber>;
            createdBy: z.ZodOptional<z.ZodString>;
            lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
            lastUpdatedBy: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }, {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        _id: string;
        description: string | null;
        imageFileId: string | null;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        name: string;
        userId: string;
        stripeCustomerId: string;
    }, {
        _id: string;
        description: string | null;
        imageFileId: string | null;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        name: string;
        userId: string;
        stripeCustomerId: string;
    }>;
}, "strip", z.ZodTypeAny, {
    toAddress: string;
    inviteeExists: boolean;
    inviterFirstName: string;
    inviterLastName: string;
    organization: {
        _id: string;
        description: string | null;
        imageFileId: string | null;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        name: string;
        userId: string;
        stripeCustomerId: string;
    };
}, {
    toAddress: string;
    inviteeExists: boolean;
    inviterFirstName: string;
    inviterLastName: string;
    organization: {
        _id: string;
        description: string | null;
        imageFileId: string | null;
        meta: {
            createdAt?: number | undefined;
            createdBy?: string | undefined;
            lastUpdatedAt?: number | undefined;
            lastUpdatedBy?: string | undefined;
        };
        name: string;
        userId: string;
        stripeCustomerId: string;
    };
}>;
export declare const sendInviteToOrganizationEmailRequest: z.ZodObject<{
    params: z.ZodObject<{
        toAddress: z.ZodString;
        inviteeExists: z.ZodBoolean;
        inviterFirstName: z.ZodString;
        inviterLastName: z.ZodString;
        organization: z.ZodObject<{
            _id: z.ZodString;
            stripeCustomerId: z.ZodString;
            userId: z.ZodString;
            name: z.ZodString;
            imageFileId: z.ZodNullable<z.ZodString>;
            description: z.ZodNullable<z.ZodString>;
            meta: z.ZodObject<{
                createdAt: z.ZodOptional<z.ZodNumber>;
                createdBy: z.ZodOptional<z.ZodString>;
                lastUpdatedAt: z.ZodOptional<z.ZodNumber>;
                lastUpdatedBy: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            }, {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            _id: string;
            description: string | null;
            imageFileId: string | null;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            name: string;
            userId: string;
            stripeCustomerId: string;
        }, {
            _id: string;
            description: string | null;
            imageFileId: string | null;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            name: string;
            userId: string;
            stripeCustomerId: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        toAddress: string;
        inviteeExists: boolean;
        inviterFirstName: string;
        inviterLastName: string;
        organization: {
            _id: string;
            description: string | null;
            imageFileId: string | null;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            name: string;
            userId: string;
            stripeCustomerId: string;
        };
    }, {
        toAddress: string;
        inviteeExists: boolean;
        inviterFirstName: string;
        inviterLastName: string;
        organization: {
            _id: string;
            description: string | null;
            imageFileId: string | null;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            name: string;
            userId: string;
            stripeCustomerId: string;
        };
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        toAddress: string;
        inviteeExists: boolean;
        inviterFirstName: string;
        inviterLastName: string;
        organization: {
            _id: string;
            description: string | null;
            imageFileId: string | null;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            name: string;
            userId: string;
            stripeCustomerId: string;
        };
    };
}, {
    params: {
        toAddress: string;
        inviteeExists: boolean;
        inviterFirstName: string;
        inviterLastName: string;
        organization: {
            _id: string;
            description: string | null;
            imageFileId: string | null;
            meta: {
                createdAt?: number | undefined;
                createdBy?: string | undefined;
                lastUpdatedAt?: number | undefined;
                lastUpdatedBy?: string | undefined;
            };
            name: string;
            userId: string;
            stripeCustomerId: string;
        };
    };
}>;
export declare const sendInviteToOrganizationEmailResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    success: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    success?: boolean | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    success?: boolean | undefined;
}>;
export type SendInviteToOrganizationEmailParams = z.infer<typeof sendInviteToOrganizationEmailParams>;
export type SendInviteToOrganizationEmailRequest = z.infer<typeof sendInviteToOrganizationEmailRequest>;
export type SendInviteToOrganizationEmailResponse = z.infer<typeof sendInviteToOrganizationEmailResponse>;
