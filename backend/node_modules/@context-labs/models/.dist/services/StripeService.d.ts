import z from 'zod';
export interface StripeService {
    listProducts(request: ListStripeProductsRequest): Promise<ListStripeProductsResponse>;
    upgradeInfo(request: StripeUpgradeInfoRequest): Promise<StripeUpgradeInfoResponse>;
    createCustomer(request: CreateStripeCustomerRequest): Promise<CreateStripeCustomerResponse>;
    createSession(request: CreateStripeSessionRequest): Promise<CreateStripeSessionResponse>;
    createBillingPortalSession(request: CreateStripeBillingPortalSessionRequest): Promise<CreateStripeBillingPortalSessionResponse>;
}
/** ******************************************************************************
*  List Stripe Products
******************************************************************************* */
export declare const listStripeProductsParams: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
export declare const listStripeProductsRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodOptional<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
}, "strip", z.ZodTypeAny, {
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
    params?: {} | undefined;
}, {
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
    params?: {} | undefined;
}>;
export declare const listStripeProductsResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    products: z.ZodOptional<z.ZodArray<z.ZodAny, "many">>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    products?: any[] | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    products?: any[] | undefined;
}>;
export type ListStripeProductsParams = z.infer<typeof listStripeProductsParams>;
export type ListStripeProductsRequest = z.infer<typeof listStripeProductsRequest>;
export type ListStripeProductsResponse = z.infer<typeof listStripeProductsResponse>;
/** ******************************************************************************
*  Get Stripe Upgrade Info
******************************************************************************* */
export declare const stripeUpgradeInfoParams: z.ZodObject<{
    productId: z.ZodString;
    priceId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    productId: string;
    priceId: string;
}, {
    productId: string;
    priceId: string;
}>;
export declare const stripeUpgradeInfoRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        productId: z.ZodString;
        priceId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        productId: string;
        priceId: string;
    }, {
        productId: string;
        priceId: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        productId: string;
        priceId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        productId: string;
        priceId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const stripeUpgradeInfoResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    upgradeInfo: z.ZodOptional<z.ZodNullable<z.ZodObject<{
        total: z.ZodNumber;
        items: z.ZodArray<z.ZodObject<{
            name: z.ZodString;
            quantity: z.ZodNumber;
            amount: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            name: string;
            quantity: number;
            amount: number;
        }, {
            name: string;
            quantity: number;
            amount: number;
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        total: number;
        items: {
            name: string;
            quantity: number;
            amount: number;
        }[];
    }, {
        total: number;
        items: {
            name: string;
            quantity: number;
            amount: number;
        }[];
    }>>>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    upgradeInfo?: {
        total: number;
        items: {
            name: string;
            quantity: number;
            amount: number;
        }[];
    } | null | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    upgradeInfo?: {
        total: number;
        items: {
            name: string;
            quantity: number;
            amount: number;
        }[];
    } | null | undefined;
}>;
export type StripeUpgradeInfoParams = z.infer<typeof stripeUpgradeInfoParams>;
export type StripeUpgradeInfoRequest = z.infer<typeof stripeUpgradeInfoRequest>;
export type StripeUpgradeInfoResponse = z.infer<typeof stripeUpgradeInfoResponse>;
/** ******************************************************************************
*  Create Stripe Customer
******************************************************************************* */
export declare const createStripeCustomerParams: z.ZodObject<{
    organizationId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    organizationId: string;
}, {
    organizationId: string;
}>;
export declare const createStripeCustomerRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        organizationId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        organizationId: string;
    }, {
        organizationId: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        organizationId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        organizationId: string;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const createStripeCustomerResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    customerId: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    customerId?: string | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    customerId?: string | undefined;
}>;
export type CreateStripeCustomerParams = z.infer<typeof createStripeCustomerParams>;
export type CreateStripeCustomerRequest = z.infer<typeof createStripeCustomerRequest>;
export type CreateStripeCustomerResponse = z.infer<typeof createStripeCustomerResponse>;
/** ******************************************************************************
*  Create Stripe Session
******************************************************************************* */
export declare const createStripeSessionParams: z.ZodObject<{
    priceId: z.ZodString;
    invoiceId: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    priceId: string;
    invoiceId?: string | undefined;
}, {
    priceId: string;
    invoiceId?: string | undefined;
}>;
export declare const createStripeSessionRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{
        priceId: z.ZodString;
        invoiceId: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        priceId: string;
        invoiceId?: string | undefined;
    }, {
        priceId: string;
        invoiceId?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        priceId: string;
        invoiceId?: string | undefined;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {
        priceId: string;
        invoiceId?: string | undefined;
    };
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const createStripeSessionResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    sessionId: z.ZodOptional<z.ZodString>;
    sessionUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    sessionId?: string | undefined;
    sessionUrl?: string | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    sessionId?: string | undefined;
    sessionUrl?: string | undefined;
}>;
export type CreateStripeSessionParams = z.infer<typeof createStripeSessionParams>;
export type CreateStripeSessionRequest = z.infer<typeof createStripeSessionRequest>;
export type CreateStripeSessionResponse = z.infer<typeof createStripeSessionResponse>;
/** ******************************************************************************
*  Create Stripe Billing Portal Session
******************************************************************************* */
export declare const createStripeBillingPortalSessionParams: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
export declare const createStripeBillingPortalSessionRequest: z.ZodObject<{
    auth: z.ZodObject<{
        email: z.ZodOptional<z.ZodString>;
        userId: z.ZodOptional<z.ZodString>;
        organizationId: z.ZodOptional<z.ZodString>;
        token: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }, {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    }>;
    params: z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>;
}, "strip", z.ZodTypeAny, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}, {
    params: {};
    auth: {
        email?: string | undefined;
        userId?: string | undefined;
        organizationId?: string | undefined;
        token?: string | undefined;
    };
}>;
export declare const createStripeBillingPortalSessionResponse: z.ZodObject<{
    status: z.ZodEnum<[string, ...string[]]>;
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
        fields: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        message: string;
        fields?: Record<string, string> | undefined;
    }, {
        message: string;
        fields?: Record<string, string> | undefined;
    }>>;
    billingPortalUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    billingPortalUrl?: string | undefined;
}, {
    status: string;
    error?: {
        message: string;
        fields?: Record<string, string> | undefined;
    } | undefined;
    billingPortalUrl?: string | undefined;
}>;
export type CreateStripeBillingPortalSessionParams = z.infer<typeof createStripeBillingPortalSessionParams>;
export type CreateStripeBillingPortalSessionRequest = z.infer<typeof createStripeBillingPortalSessionRequest>;
export type CreateStripeBillingPortalSessionResponse = z.infer<typeof createStripeBillingPortalSessionResponse>;
