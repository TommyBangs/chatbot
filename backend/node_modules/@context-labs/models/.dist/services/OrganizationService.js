"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.superSetOrganizationOwnerResponse = exports.superSetOrganizationOwnerRequest = exports.superSetOrganizationOwnerParams = exports.superListOrganizationsResponse = exports.superListOrganizationsRequest = exports.superListOrganizationsParams = exports.listOrganizationUsersResponse = exports.listOrganizationUsersRequest = exports.listOrganizationUsersParams = exports.listOrganizationsResponse = exports.listOrganizationsRequest = exports.listOrganizationsParams = exports.getOrganizationResponse = exports.getOrganizationRequest = exports.getOrganizationParams = exports.editOrganizationResponse = exports.editOrganizationRequest = exports.editOrganizationParams = exports.createOrganizationResponse = exports.createOrganizationRequest = exports.createOrganizationParams = exports.organization = void 0;
const zod_1 = __importDefault(require("zod"));
const common_1 = require("../interfaces/common");
const Metadata_1 = require("../interfaces/Metadata");
const UserService_1 = require("./UserService");
const RoleService_1 = require("./RoleService");
exports.organization = zod_1.default.object({
    _id: zod_1.default.string(),
    stripeCustomerId: zod_1.default.string(),
    userId: zod_1.default.string(),
    name: zod_1.default.string(),
    imageFileId: zod_1.default.string().nullable(),
    description: zod_1.default.string().nullable(),
    meta: Metadata_1.metadata,
});
/** ******************************************************************************
*  Create Organization
******************************************************************************* */
exports.createOrganizationParams = zod_1.default.object({
    stripeCustomerId: zod_1.default.string().optional(),
    name: zod_1.default.string(),
    imageFileId: zod_1.default.string().nullable(),
    description: zod_1.default.string().nullable(),
});
exports.createOrganizationRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.createOrganizationParams,
}));
exports.createOrganizationResponse = common_1.serviceResponse.merge(zod_1.default.object({
    organization: exports.organization.optional(),
}));
/** ******************************************************************************
*  Edit Organization
******************************************************************************* */
exports.editOrganizationParams = zod_1.default.object({
    _id: zod_1.default.string(),
    name: zod_1.default.string(),
    imageFileId: zod_1.default.string().nullable(),
    description: zod_1.default.string().nullable(),
});
exports.editOrganizationRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.editOrganizationParams,
}));
exports.editOrganizationResponse = common_1.serviceResponse.merge(zod_1.default.object({
    organization: exports.organization.optional(),
}));
/** ******************************************************************************
*  Get Organization
******************************************************************************* */
exports.getOrganizationParams = zod_1.default.object({});
exports.getOrganizationRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.getOrganizationParams,
}));
exports.getOrganizationResponse = common_1.serviceResponse.merge(zod_1.default.object({
    organization: exports.organization.optional(),
}));
/** ******************************************************************************
*  List Organizations
******************************************************************************* */
exports.listOrganizationsParams = zod_1.default.object({
    _ids: zod_1.default.array(zod_1.default.string()),
});
exports.listOrganizationsRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.listOrganizationsParams,
}));
exports.listOrganizationsResponse = common_1.serviceResponse.merge(zod_1.default.object({
    organizations: zod_1.default.array(exports.organization).optional(),
}));
/** ******************************************************************************
*  List Organization Users
******************************************************************************* */
exports.listOrganizationUsersParams = zod_1.default.object({});
exports.listOrganizationUsersRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.listOrganizationUsersParams,
}));
exports.listOrganizationUsersResponse = common_1.serviceResponse.merge(zod_1.default.object({
    users: zod_1.default.array(UserService_1.user).optional(),
}));
/** ******************************************************************************
*  Super List Organizations
******************************************************************************* */
exports.superListOrganizationsParams = zod_1.default.object({});
exports.superListOrganizationsRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.superListOrganizationsParams,
}));
exports.superListOrganizationsResponse = common_1.serviceResponse.merge(zod_1.default.object({
    organizations: zod_1.default.array(exports.organization).optional(),
}));
/** ******************************************************************************
*  Super Set Organization Owner
******************************************************************************* */
exports.superSetOrganizationOwnerParams = zod_1.default.object({
    userId: zod_1.default.string(),
});
exports.superSetOrganizationOwnerRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.superSetOrganizationOwnerParams,
}));
exports.superSetOrganizationOwnerResponse = common_1.serviceResponse.merge(zod_1.default.object({
    organization: exports.organization.optional(),
    role: RoleService_1.role.optional(),
}));
//# sourceMappingURL=OrganizationService.js.map