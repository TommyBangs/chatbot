"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.countSnippetsResponse = exports.countSnippetsRequest = exports.countSnippetsParams = exports.listSnippetsResponse = exports.listSnippetsRequest = exports.listSnippetsParams = exports.getSnippetResponse = exports.getSnippetRequest = exports.getSnippetParams = exports.createSnippetResponse = exports.createSnippetRequest = exports.createSnippetParams = exports.SnippetSortBy = exports.snippet = exports.zSnippetTypes = void 0;
const zod_1 = __importDefault(require("zod"));
const common_1 = require("../interfaces/common");
const Metadata_1 = require("../interfaces/Metadata");
exports.zSnippetTypes = zod_1.default.enum([
    'YouTube',
    'RSS',
    'WebPage',
    'File',
]);
exports.snippet = zod_1.default.object({
    _id: zod_1.default.string(),
    organizationId: zod_1.default.string(),
    sourceId: zod_1.default.string(),
    syncId: zod_1.default.string(),
    documentId: zod_1.default.string(),
    title: zod_1.default.string(),
    text: zod_1.default.string(),
    type: exports.zSnippetTypes,
    url: zod_1.default.string().url(),
    domain: zod_1.default.string().url().optional(),
    lang: zod_1.default.string().optional(),
    hash: zod_1.default.string(),
    index: zod_1.default.number(),
    startTime: zod_1.default.string().nullable(),
    startSeconds: zod_1.default.number(),
    endTime: zod_1.default.string().optional(),
    endSeconds: zod_1.default.number().optional(),
    releasedAt: zod_1.default.number().optional(),
    views: zod_1.default.number().optional(),
    pageNumber: zod_1.default.number().optional(),
    meta: Metadata_1.metadata,
});
var SnippetSortBy;
(function (SnippetSortBy) {
    SnippetSortBy["Relevance"] = "Relevance";
    SnippetSortBy["MostPopular"] = "Most Popular";
    SnippetSortBy["LeastPopular"] = "Least Popular";
    SnippetSortBy["MostRecent"] = "Most Recent";
    SnippetSortBy["LeastRecent"] = "Least Recent";
})(SnippetSortBy || (exports.SnippetSortBy = SnippetSortBy = {}));
/** ******************************************************************************
*  Create Snippet
******************************************************************************* */
exports.createSnippetParams = zod_1.default.object({
    organizationId: zod_1.default.string(),
    sourceId: zod_1.default.string(),
    syncId: zod_1.default.string(),
    documentId: zod_1.default.string(),
    title: zod_1.default.string(),
    text: zod_1.default.string(),
    type: exports.zSnippetTypes,
    url: zod_1.default.string().url(),
    domain: zod_1.default.string().url().optional(),
    lang: zod_1.default.string().optional(),
    hash: zod_1.default.string(),
    index: zod_1.default.number(),
    startTime: zod_1.default.string().optional(),
    startSeconds: zod_1.default.number().optional(),
    endTime: zod_1.default.string().optional(),
    endSeconds: zod_1.default.number().optional(),
    releasedAt: zod_1.default.number().optional(),
    views: zod_1.default.number().optional(),
    pageNumber: zod_1.default.number().optional(),
});
exports.createSnippetRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: zod_1.default.array(exports.createSnippetParams),
}));
exports.createSnippetResponse = common_1.serviceResponse.merge(zod_1.default.object({
    snippets: exports.snippet.array().optional(),
}));
/** ******************************************************************************
*  Get Snippet
******************************************************************************* */
exports.getSnippetParams = zod_1.default.object({
    snippetId: zod_1.default.string(),
});
exports.getSnippetRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.getSnippetParams,
}));
exports.getSnippetResponse = common_1.serviceResponse.merge(zod_1.default.object({
    snippet: exports.snippet.nullable().optional(),
}));
/** ******************************************************************************
*  List Snippets
******************************************************************************* */
exports.listSnippetsParams = zod_1.default.object({
    _ids: zod_1.default.array(zod_1.default.string()).optional(),
    documentId: zod_1.default.string().optional(),
});
exports.listSnippetsRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.listSnippetsParams,
}));
exports.listSnippetsResponse = common_1.serviceResponse.merge(zod_1.default.object({
    snippets: zod_1.default.array(exports.snippet).optional(),
}));
/** ******************************************************************************
*  Count Snippets
******************************************************************************* */
exports.countSnippetsParams = zod_1.default.object({
    sourceId: zod_1.default.string(),
});
exports.countSnippetsRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.countSnippetsParams,
}));
exports.countSnippetsResponse = common_1.serviceResponse.merge(zod_1.default.object({
    count: zod_1.default.number().optional(),
}));
//# sourceMappingURL=SnippetService.js.map