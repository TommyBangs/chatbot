"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSourceImportInfoResponse = exports.getSourceImportInfoRequest = exports.getSourceImportInfoParams = exports.listSourcesResponse = exports.listSourcesRequest = exports.listSourcesParams = exports.getSourceResponse = exports.getSourceRequest = exports.getSourceParams = exports.archiveSourceResponse = exports.archiveSourceRequest = exports.archiveSourceParams = exports.syncSourceResponse = exports.syncSourceRequest = exports.syncSourceParams = exports.editSourceResponse = exports.editSourceRequest = exports.editSourceParams = exports.addSourceResponse = exports.addSourceRequest = exports.addSourceParams = exports.sourceImportInfo = exports.sourceFiles = exports.source = exports.zSourceTypes = void 0;
const zod_1 = __importDefault(require("zod"));
const common_1 = require("../interfaces/common");
const Metadata_1 = require("../interfaces/Metadata");
const BotService_1 = require("./BotService");
const FileService_1 = require("./FileService");
const InvoiceService_1 = require("./InvoiceService");
const SubscriptionService_1 = require("./SubscriptionService");
const SyncService_1 = require("./SyncService");
exports.zSourceTypes = zod_1.default.enum([
    'YouTube',
    'RSS',
    'SiteMap',
    'Files',
    'WARC',
]);
exports.source = zod_1.default.object({
    _id: zod_1.default.string(),
    organizationId: zod_1.default.string(),
    syncId: zod_1.default.string().optional(),
    title: zod_1.default.string(),
    description: zod_1.default.string().optional(),
    imageFileId: zod_1.default.string().nullable().optional(),
    type: exports.zSourceTypes,
    importUrl: zod_1.default.string().optional(),
    transcribe: zod_1.default.boolean().optional(),
    regex: zod_1.default.string().nullable().optional(),
    durationSeconds: zod_1.default.number().optional(),
    documentCount: zod_1.default.number(),
    archived: zod_1.default.boolean().optional(),
    meta: Metadata_1.metadata,
});
exports.sourceFiles = zod_1.default.object({
    imageFile: FileService_1.file.nullable(),
    coverImageFile: FileService_1.file.nullable(),
    sponsorImageFile: FileService_1.file.nullable(),
});
exports.sourceImportInfo = zod_1.default.object({
    title: zod_1.default.string(),
    imageUrl: zod_1.default.string().optional(),
    documentCount: zod_1.default.number(),
    durationHours: zod_1.default.number().optional(),
    durationSeconds: zod_1.default.number().optional(),
    transcriptionCost: zod_1.default.number().optional(),
    error: zod_1.default.string().optional(),
});
/** ******************************************************************************
*  Add Source
******************************************************************************* */
exports.addSourceParams = zod_1.default.object({
    botId: zod_1.default.string().optional(),
    title: zod_1.default.string(),
    description: zod_1.default.string(),
    imageFileId: zod_1.default.string(),
    importUrl: zod_1.default.string().url().optional(),
    transcribe: zod_1.default.boolean().optional(),
    regex: zod_1.default.string().nullable().optional(),
    stripePriceId: zod_1.default.string().optional(),
    type: exports.zSourceTypes,
});
exports.addSourceRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.addSourceParams,
}));
exports.addSourceResponse = common_1.serviceResponse.merge(zod_1.default.object({
    source: exports.source.optional(),
    sync: SyncService_1.sync.nullable().optional(),
    subscription: SubscriptionService_1.subscription.nullable().optional(),
}));
/** ******************************************************************************
*  Edit Source
******************************************************************************* */
exports.editSourceParams = zod_1.default.object({
    _id: zod_1.default.string(),
    title: zod_1.default.string().min(4).max(64),
    description: zod_1.default.string(),
    imageFileId: zod_1.default.string(),
    transcribe: zod_1.default.boolean(),
    regex: zod_1.default.string().nullable(),
});
exports.editSourceRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.editSourceParams,
}));
exports.editSourceResponse = common_1.serviceResponse.merge(zod_1.default.object({
    source: exports.source.optional(),
    sessionUrl: zod_1.default.string().optional(),
}));
/** ******************************************************************************
*  Sync Source
******************************************************************************* */
exports.syncSourceParams = zod_1.default.object({
    _id: zod_1.default.string(),
    syncId: zod_1.default.string(),
});
exports.syncSourceRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.syncSourceParams,
}));
exports.syncSourceResponse = common_1.serviceResponse.merge(zod_1.default.object({
    source: exports.source.optional(),
    lastSyncId: zod_1.default.string().optional(),
}));
/** ******************************************************************************
*  Archive Source
******************************************************************************* */
exports.archiveSourceParams = zod_1.default.object({
    _id: zod_1.default.string(),
    archived: zod_1.default.boolean(),
});
exports.archiveSourceRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.archiveSourceParams,
}));
exports.archiveSourceResponse = common_1.serviceResponse.merge(zod_1.default.object({
    source: exports.source.nullable().optional(),
    bots: zod_1.default.array(BotService_1.bot).optional(),
    invoice: InvoiceService_1.invoice.nullable().optional(),
}));
/** ******************************************************************************
*  Get Source
******************************************************************************* */
exports.getSourceParams = zod_1.default.object({
    sourceId: zod_1.default.string(),
});
exports.getSourceRequest = common_1.serviceRequest.merge(zod_1.default.object({
    params: exports.getSourceParams,
}));
exports.getSourceResponse = common_1.serviceResponse.merge(zod_1.default.object({
    source: exports.source.nullable().optional(),
}));
/** ******************************************************************************
*  List Sources
******************************************************************************* */
exports.listSourcesParams = zod_1.default.object({
    archived: zod_1.default.boolean().optional(),
});
exports.listSourcesRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.listSourcesParams.optional(),
}));
exports.listSourcesResponse = common_1.serviceResponse.merge(zod_1.default.object({
    sources: zod_1.default.array(exports.source).optional(),
}));
/** ******************************************************************************
*  Source Import Info
******************************************************************************* */
exports.getSourceImportInfoParams = zod_1.default.object({
    importUrl: zod_1.default.string(),
    type: exports.zSourceTypes,
});
exports.getSourceImportInfoRequest = common_1.authedServiceRequest.merge(zod_1.default.object({
    params: exports.getSourceImportInfoParams,
}));
exports.getSourceImportInfoResponse = common_1.serviceResponse.merge(zod_1.default.object({
    info: exports.sourceImportInfo.optional(),
}));
//# sourceMappingURL=SourceService.js.map