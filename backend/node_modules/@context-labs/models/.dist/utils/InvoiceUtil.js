"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const checkInvoice = (invoice) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
    return {
        hasCredits: ((_b = (_a = invoice === null || invoice === void 0 ? void 0 : invoice.usage) === null || _a === void 0 ? void 0 : _a.credits) !== null && _b !== void 0 ? _b : 0) <= ((_d = (_c = invoice === null || invoice === void 0 ? void 0 : invoice.usageLimits) === null || _c === void 0 ? void 0 : _c.credits) !== null && _d !== void 0 ? _d : 0),
        hasDocuments: ((_f = (_e = invoice === null || invoice === void 0 ? void 0 : invoice.usage) === null || _e === void 0 ? void 0 : _e.documents) !== null && _f !== void 0 ? _f : 0) <= ((_h = (_g = invoice === null || invoice === void 0 ? void 0 : invoice.usageLimits) === null || _g === void 0 ? void 0 : _g.documents) !== null && _h !== void 0 ? _h : 0),
        hasSyncs: ((_k = (_j = invoice === null || invoice === void 0 ? void 0 : invoice.usage) === null || _j === void 0 ? void 0 : _j.syncs) !== null && _k !== void 0 ? _k : 0) <= ((_m = (_l = invoice === null || invoice === void 0 ? void 0 : invoice.usageLimits) === null || _l === void 0 ? void 0 : _l.syncs) !== null && _m !== void 0 ? _m : 0),
    };
};
const changeReport = (invoice, usageDiff) => {
    if (!invoice)
        return checkInvoice(null);
    const newUsage = Object.keys(invoice.usage).reduce((cur, nextKey) => {
        var _a;
        const value = (_a = usageDiff === null || usageDiff === void 0 ? void 0 : usageDiff[nextKey]) !== null && _a !== void 0 ? _a : 0;
        cur[nextKey] += value;
        return cur;
    }, Object.assign({}, invoice.usage));
    return checkInvoice(Object.assign(Object.assign({}, invoice), { usage: newUsage }));
};
const addUsage = (current, addend) => {
    return Object.keys(addend).reduce((cur, nextKey) => {
        var _a;
        const value = (_a = addend === null || addend === void 0 ? void 0 : addend[nextKey]) !== null && _a !== void 0 ? _a : 0;
        cur[nextKey] += value;
        return cur;
    }, Object.assign({}, current));
};
const usagePercentage = (invoice) => {
    if (!invoice)
        return null;
    const current = invoice.usage;
    const limits = invoice.usageLimits;
    return {
        credits: Math.round((current.credits / limits.credits) * 100),
        documents: Math.round((current.documents / limits.documents) * 100),
        syncs: Math.round((current.syncs / limits.syncs) * 100),
    };
};
const InvoiceUtil = {
    checkInvoice,
    changeReport,
    addUsage,
    usagePercentage,
};
exports.default = InvoiceUtil;
//# sourceMappingURL=InvoiceUtil.js.map